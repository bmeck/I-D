<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.13 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2397 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2397.xml">
<!ENTITY RFC2978 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2978.xml">
<!ENTITY RFC3552 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC3629 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3629.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC3987 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3987.xml">
<!ENTITY RFC4329 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4329.xml">
<!ENTITY RFC6265 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6265.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC3236 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3236.xml">
<!ENTITY RFC3875 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3875.xml">
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc docName="draft-ietf-dispatch-javascript-mjs-06" category="info" obsoletes="4329">

  <front>
    <title>ECMAScript Media Types Updates</title>

    <author initials="M." surname="Miller" fullname="Matthew A. Miller">
      <organization>Mozilla</organization>
      <address>
        <email>linuxwolf+ietf@outer-planes.net</email>
      </address>
    </author>
    <author initials="M." surname="Borins" fullname="Myles Borins">
      <organization>Google</organization>
      <address>
        <email>mylesborins@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Bynens" fullname="Mathias Bynens">
      <organization>Google</organization>
      <address>
        <email>mths@google.com</email>
      </address>
    </author>
    <author initials="B." surname="Farias" fullname="Bradley Farias">
      <organization></organization>
      <address>
        <email>bradley.meck@gmail.com</email>
      </address>
    </author>

    <date year="2020" month="March" day="06"/>

    <area>ART</area>
    <workgroup>DISPATCH</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document updates the ECMAScript media types, replacing the existing registrations for “application/javascript” and “text/javascript” with information and requirements aligned with implementation experiences.  This document obsoletes RFC4329, “Scripting Media Types”.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>This memo describes media types for the JavaScript and ECMAScript programming languages.  Refer to “Brief History” and “Overview” in <xref target="ECMA-262"/> for background information on these languages.  This document updates the descriptions and registrations for these media types to reflect existing usage on the Internet.</t>

<t>This document replaces the media types registrations in <xref target="RFC4329"/>, osboleting that document.</t>

<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in BCP 14  <xref target="RFC2119"/>  <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="compatibility" title="Compatibility">

<t>This document defines equivalent processing requirements for the types text/javascript, text/ecmascript, and application/javascript.  The most widely supported media type in use is text/javascript; all others are considered historical and obsolete compared to text/javascript.  Differences in ECMAScript versions have been better dealt within in the processors.</t>

<t>The types defined in this document are applicable to scripts written in <xref target="ECMA-262"/>.  This document does not address scripts written in other languages.  In particular, future editions of <xref target="ECMA-262"/> and extensions to <xref target="ECMA-262"/> are not directly addressed.</t>

<t>This document may be updated to take other content into account.  Updates of this document may introduce new optional parameters; implementations MUST consider the impact of such an update.</t>

</section>
<section anchor="modules" title="Modules">

<t>In order to formalize support for modular programs, <xref target="ECMA-262"/> (starting with 6th Edition) defines two top-level goal symbols (or roots to the abstract syntax tree) for the ECMAScript grammar: Module and Script. The Script goal represents the more stand-alone structure where the code executes in the global scope, while the Module goal represents the module system built into ECMAScript starting with 6th Edition.</t>

<t>This separation means that (in the absence of additional information) there are two possible interpretations for any given ECMAScript Source Text. The TC39 standards body for ECMAScript has determined that media types are outside of their scope of work <xref target="TC39-MIME-ISSUE"/>.</t>

<t>It is not possible to fully determine if a Source Text of ECMAScript is meant to be parsed in the Module or Script grammar goals based upon content alone. Therefore, scripting environments must use out of band information in order to determine what goal a Source Text should be treated as. To this end some scripting environments have chosen to adopt a new file extension of .mjs for determining the goal of a given Source Text.</t>

<t>This document does not define how fragment identifiers in resource identifiers (<xref target="RFC3986"/>, <xref target="RFC3987"/>) for documents labeled with one of the media types defined in this document are resolved.  An update of this document may define processing of fragment identifiers.</t>

</section>
<section anchor="encoding" title="Encoding">

<t>Refer to <xref target="RFC6265"/> for a discussion of terminology used in this section.  Source text (as defined in <xref target="ECMA-262"/>, section “Source Text”) can be binary source text.  Binary source text is a textual data object that represents source text encoded using a character encoding scheme.  A textual data object is a whole text protocol message or a whole text document, or a part of it, that is treated separately for purposes of external storage and retrieval.  An implementation’s internal representation of source text and source text are not considered binary source text.</t>

<t>Implementations need to determine a character encoding scheme in order to decode binary source text to source text.  The media types defined in this document allow an optional charset parameter to explicitly specify the character encoding scheme used to encode the source text.</t>

<t>How implementations determine the character encoding scheme can be subject to processing rules that are out of the scope of this document.  For example, transport protocols can require that a specific character encoding scheme is to be assumed if the optional charset parameter is not specified, or they can require that the charset parameter is used in certain cases.  Such requirements are not considered part of this document.</t>

<t>Implementations that support binary source text MUST support binary source text encoded using the UTF-8 <xref target="RFC3629"/> character encoding scheme.  Other character encoding schemes MAY be supported.  Use of UTF-8 to encode binary source text is encouraged but not required.</t>

<section anchor="charset-parameter" title="Charset Parameter">

<t>The charset parameter provides a means to specify the character encoding scheme of binary source text.  Its value MUST match the mime-charset production defined in <xref target="RFC2978"/>, section 2.3, and SHOULD be a registered charset <xref target="CHARSETS"/>.  An illegal value is a value that does not match that production.</t>

</section>
<section anchor="character-encoding-scheme-detection" title="Character Encoding Scheme Detection">

<t>It is possible that implementations cannot interoperably determine a single character encoding scheme simply by complying with all requirements of the applicable specifications.  To foster interoperability in such cases, the following algorithm is defined.</t>

<t>Implementations apply this algorithm until a single character encoding scheme is determined.</t>

<t><list style="numbers">
  <t>If a charset parameter with a legal value is specified, the value determines the character encoding scheme.</t>
  <t>If the binary source text starts with a Unicode encoding form signature, the signature determines the encoding.  The following octet sequences, at the very beginning of the binary source text, are considered with their corresponding character encoding schemes:  <vspace blankLines='1'/>
    <figure><artwork><![CDATA[
 +------------------+----------+
 | Leading sequence | Encoding |
 |------------------+----------|
 | FF FE 00 00      | UTF-32LE |
 | 00 00 FE FF      | UTF-32BE |
 | FF FE            | UTF-16LE |
 | FE FF            | UTF-16BE |
 | EF BB BF         | UTF-8    |
 +------------------+----------+
]]></artwork></figure>
  <vspace blankLines='1'/>
The longest matching octet sequence determines the encoding. Implementations of this step MUST use these octet sequences to determine the character encoding scheme, even if the determined scheme is not supported.  If this step determines the character encoding scheme, the octet sequence representing the Unicode encoding form signature MUST be ignored when decoding the binary source text to source text.</t>
  <t>The character encoding scheme is determined to be UTF-8.</t>
</list></t>

<t>If the character encoding scheme is determined to be UTF-8 through any means other than step 2 as defined above and the binary source text starts with the octet sequence EF BB BF, the octet sequence is ignored when decoding the binary source text to source text.  (The sequence will also be ignored if step 2 determines the character encoding scheme per the requirements in step 2).</t>

</section>
<section anchor="character-encoding-scheme-error-handling" title="Character Encoding Scheme Error Handling">

<t>The following error processing behavior is RECOMMENDED:</t>

<t><list style="symbols">
  <t>If the value of a charset parameter is illegal, implementations MUST either recover from the error by ignoring the parameter or consider the character encoding scheme unsupported.</t>
  <t>If binary source text is determined to have been encoded using a certain character encoding scheme that the implementation is unable to process, implementations MUST consider the resource unsupported (i.e., they MUST NOT decode the binary source text using a different character encoding scheme).</t>
  <t>Binary source text can be determined to have been encoded using a certain character encoding scheme but contain octet sequences that are not legal according to that scheme.  This is typically caused by a lack of proper character encoding scheme information; such errors can pose a security risk, as discussed in section 5.  <vspace blankLines='1'/>
Implementations SHOULD detect such errors as early as possible; in particular, they SHOULD detect them before interpreting any of the source text.  Implementations MUST detect such errors and MUST NOT interpret any source text after detecting such an error.  Such errors MAY be reported, e.g., as syntax errors as defined in <xref target="ECMA-262"/>, section 16.</t>
</list></t>

<t>This document does not define facilities that allow specification of the character encoding scheme used to encode binary source text in a conflicting manner.  There are only two sources for character encoding scheme information: the charset parameter and the Unicode encoding form signature.  If a charset parameter is specified, binary source text is processed as defined for that character encoding scheme.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Refer to <xref target="RFC3552"/> for a discussion of terminology used in this section.  Examples in this section and discussions of interactions of host environments with scripts, modules, and extensions to <xref target="ECMA-262"/> are to be understood as non-exhaustive and of a purely illustrative nature.</t>

<t>The programming language defined in <xref target="ECMA-262"/> is not intended to be computationally self-sufficient, rather it is expected that the computational environment provides facilities to programs to enable specific functionality.  Such facilities constitute unknown factors and are thus considered out of the scope of this document.</t>

<t>Derived programming languages are permitted to include additional functionality that is not described in <xref target="ECMA-262"/>; such functionality constitutes an unknown factor and is thus considered out of the scope of this document.  In particular, extensions to <xref target="ECMA-262"/> defined for the JavaScript programming language are not discussed in this document.</t>

<t>Uncontrolled execution of scripts can be exceedingly dangerous. Implementations that execute scripts MUST give consideration to their application’s threat models and those of the individual features they implement; in particular, they MUST ensure that untrusted content is not executed in an unprotected environment.</t>

<t>Module scripts in ECMAScript can request the fetching and processing of additional scripts, called importing.  Implementations that support modules need to ensure these scripts are processed the same as scripts processed directly.  Further, there may be additional privacy and security concerns depending on the location(s) the original script and its imported modules are obtained from.  For instance, a scripted obtained from “host-a.example” could request to import a script from “host-b.example”, which could expose information about the executing environment (e.g., IP address) to “host-b.example”.</t>

<t>With the addition of SharedArrayBuffer objects in ECMAScript version 8, it may be possible to implement a high-resolution timer which could lead to certain types of timing and side-channel attacks (e.g., <xref target="SPECTRE"/>).  Implementations may wish to take steps to mitigate this concern, such as disabling or removing support for SharedArrayBuffer objects, or take additional steps to ensure access to this shared memory is only accessible between execution contexts that have some form of mutual trust.</t>

<t>Specifications for host environment facilities and for derived programming languages should include security considerations.  If an implementation supports such facilities, the respective security considerations apply.  In particular, if scripts can be referenced from or included in specific document formats, the considerations for the embedding or referencing document format apply.</t>

<t>For example, scripts embedded in application/xhtml+xml <xref target="RFC3236"/> documents could be enabled through the host environment to manipulate the document instance, which could cause the retrieval of remote resources; security considerations regarding retrieval of remote resources of the embedding document would apply in this case.</t>

<t>This circumstance can further be used to make information, that is normally only available to the script, available to a web server by encoding the information in the resource identifier of the resource, which can further enable eavesdropping attacks.  Implementation of such facilities is subject to the security considerations of the host environment, as discussed above.</t>

<t>The programming language defined in <xref target="ECMA-262"/> does include facilities to loop, cause computationally complex operations, or consume large amounts of memory; this includes, but is not limited to, facilities that allow dynamically generated source text to be executed (e.g., the eval() function); uncontrolled execution of such features can cause denial of service, which implementations MUST protect against.</t>

<t>A host environment can provide facilities to access external input. Scripts that pass such input to the eval() function or similar language features can be vulnerable to code injection attacks. Scripts are expected to protect against such attacks.</t>

<t>A host environment can provide facilities to output computed results in a user-visible manner.  For example, host environments supporting a graphical user interface can provide facilities that enable scripts to present certain messages to the user.  Implementations MUST take steps to avoid confusion of the origin of such messages.  In general, the security considerations for the host environment apply in such a case as discussed above.</t>

<t>Implementations are required to support the UTF-8 character encoding scheme; the security considerations of <xref target="RFC3629"/> apply.  Additional character encoding schemes may be supported; support for such schemes is subject to the security considerations of those schemes.</t>

<t>Source text is expected to be in Unicode Normalization Form C. Scripts and implementations MUST consider security implications of unnormalized source text and data.  For a detailed discussion of such implications refer to the security considerations in <xref target="RFC3629"/>.</t>

<t>Scripts can be executed in an environment that is vulnerable to code injection attacks.  For example, a CGI script <xref target="RFC3875"/> echoing user input could allow the inclusion of untrusted scripts that could be executed in an otherwise trusted environment.  This threat scenario is subject to security considerations that are out of the scope of this document.</t>

<t>The “data” resource identifier scheme <xref target="RFC2397"/>, in combination with the types defined in this document, could be used to cause execution of untrusted scripts through the inclusion of untrusted resource identifiers in otherwise trusted content.  Security considerations of <xref target="RFC2397"/> apply.</t>

<t>Implementations can fail to implement a specific security model or other means to prevent possibly dangerous operations.  Such failure could possibly be exploited to gain unauthorized access to a system or sensitive information; such failure constitutes an unknown factor and is thus considered out of the scope of this document.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>The media type registrations herein are divided into two major categories: the sole media type “text/javascript” which is now in common usage, and all of the media types that are obsolete.</t>

<t>For both categories, The ECMAScript media types are to be updated to point to a non-vendor specific standard undated specification of ECMAScript. In addition, a new file extension of .mjs is to be added to the list of file extensions with the restriction that it must correspond to the Module grammar of <xref target="ECMA-262"/>. Finally, the <xref target="HTML"/> specification uses “text/javascript” as the default media type of ECMAScript when preparing script tags; therefore, “text/javascript” intended usage is to be moved from OBSOLETE to COMMON.</t>

<section anchor="common-javascript-media-types" title="Common Javascript Media Types">

<section anchor="textjavascript" title="text/javascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  COMMON</t>
  <t hangText='Restrictions on usage:'>
  The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
</section>
<section anchor="historic-javascript-media-types" title="Historic Javascript Media Types">

<t>The following media types are added or updated for historical purposes.  All herein have an intended usage of OBSOLETE, and are not expected to be in use with modern implementations.</t>

<section anchor="applicationecmascript" title="application/ecmascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  application</t>
  <t hangText='Subtype name:'>
  ecmascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .es, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="applicationjavascript" title="application/javascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  application</t>
  <t hangText='Subtype name:'>
  javascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  charset, see section 4.1 of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;.</t>
</list></t>

</section>
<section anchor="applicationx-ecmascript" title="application/x-ecmascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  application</t>
  <t hangText='Subtype name:'>
  x-ecmascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .es, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="applicationx-javascript" title="application/x-javascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  application</t>
  <t hangText='Subtype name:'>
  x-javascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textecmascript" title="text/ecmascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  ecmascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .es, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjavascript10" title="text/javascript1.0">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript1.0</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjavascript11" title="text/javascript1.1">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript1.1</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjavascript12" title="text/javascript1.2">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript1.2</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjavascript13" title="text/javascript1.3">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript1.3</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjavascript14" title="text/javascript1.4">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript1.4</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjavascript15" title="text/javascript1.5">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript1.5</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjscript" title="text/jscript">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  jscript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textlivescript" title="text/livescript">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  livescript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textx-ecmascript" title="text/x-ecmascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  x-ecmascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .es, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textx-javascript" title="text/x-javascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  x-javascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2397;
&RFC2978;
&RFC3552;
&RFC3629;
&RFC3986;
&RFC3987;
&RFC4329;
&RFC6265;
&RFC8174;
<reference anchor="CHARSETS" target="https://www.iana.org/assignments/character-sets">
  <front>
    <title>Assigned character sets</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ECMA-262" target="https://ecma-international.org/publications/standards/Ecma-262.htm">
  <front>
    <title>Standard ECMA-262: ECMAScript Language Specification</title>
    <author >
      <organization>Ecma International</organization>
    </author>
    <date year="2019" month="June"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC3236;
&RFC3875;
<reference anchor="HTML" target="https://html.spec.whatwg.org/multipage/scripting.html#prepare-a-script">
  <front>
    <title>HTML Living Standard</title>
    <author >
      <organization>WHATWG</organization>
    </author>
    <date year="2017" month="August"/>
  </front>
</reference>
<reference anchor="SPECTRE" target="https://arxiv.org/abs/1801.01203">
  <front>
    <title>Spectre Attacks: Exploiting Speculative Execution</title>
    <author initials="P." surname="Kocher" fullname="Paul Kocher">
      <organization></organization>
    </author>
    <author initials="A." surname="Fogh" fullname="Anders Fogh">
      <organization></organization>
    </author>
    <author initials="D." surname="Gerkin" fullname="Daniel Gerkin">
      <organization></organization>
    </author>
    <author initials="D." surname="Gruss" fullname="Daniel Gruss">
      <organization></organization>
    </author>
    <author initials="W." surname="Haas" fullname="Werner Haas">
      <organization></organization>
    </author>
    <author initials="M." surname="Hamburg" fullname="Mike Hamburg">
      <organization></organization>
    </author>
    <author initials="M." surname="Lipp" fullname="Moritz Lipp">
      <organization></organization>
    </author>
    <author initials="S." surname="Mangard" fullname="Stefan Mangard">
      <organization></organization>
    </author>
    <author initials="T." surname="Prescher" fullname="Thomas Prescher">
      <organization></organization>
    </author>
    <author initials="M." surname="Schwarz" fullname="Michael Schwarz">
      <organization></organization>
    </author>
    <author initials="Y." surname="Yarom" fullname="Yuval Yarom">
      <organization></organization>
    </author>
    <date year="2018" month="January"/>
  </front>
</reference>
<reference anchor="TC39-MIME-ISSUE" target="https://web.archive.org/web/20170814193912/https://github.com/tc39/ecma262/issues/322">
  <front>
    <title>Add `application/javascript+module` mime to remove ambiguity</title>
    <author >
      <organization>TC39</organization>
    </author>
    <date year="2017" month="August"/>
  </front>
</reference>


    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>This work builds upon its antecedent document, authored by Bjoern Hoehrmann.  The authors would like to thank Adam Roach, Anna van Kesteren, Allen Wirfs-Brock, Alexey Melnikov, James Snell, Mark Nottingham, Murray Kucherawy, and Suresh Krishnan for their guidance and feedback throughout this process.</t>

</section>
<section anchor="changes-from-rfc-4329" title="Changes from RFC 4329">

<t><list style="symbols">
  <t>Added a section discussing ECMAscript modules and the impact on processing.</t>
  <t>Updated the Security Considerations to discuss concerns associated with ECMAscript modules and SharedArrayBuffers.</t>
  <t>Updated the character encoding scheme detection to remove normative guidance on its use, to better reflect operational reality.</t>
  <t>Changed the intended usage of the media type text/javascript from obsolete to common.</t>
  <t>Changed the intended usage for all other script media types to obsolete.</t>
  <t>Updated various references where the original has been osboleted</t>
  <t>Updated references to ECMA-262 to match the version at time of publication.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
tGWdmHoPkq4HT8fIcNOKa/rD+s0RzYzNPllDpZ8VkGucBMSHqupzOcwFDT/i
VotpgjPyt8Ad2IJ9y8SX6fR4hkxB+NICd3R2cvGD+PXfIfBMv8e3HuErI379
a4+A6KV95HktFDVPfLUDFccFMAwXq6hsXD9G7Z7twWwKQqYN1lSLxnJvE0Bh
Tg4v+37zlnfF2rkOeiCFG+RQRbtwTI9/weTCcmn9eHkbSYNWHYAa3rcF1D8p
oKqvFFCdO22G1IbeaW/JstfnAuyMDv21KwZ2X4fWrclTHO2iqnmNubudbHf4
xwf0/2tE/2bNizM+D/X+tDTyM+X+wyPf10olt8j350G+vw47kO9m8KWMr3nn
F6Hf14t/W9a3ZX1b7Pt6sK+T9d0MvpT3Ne/cYt+fFvu2vG+LfV8N9rXeH3nH
rZIty9si3ZblbZHuq0O6ekH2hg8+e1+Y7tni3Z8W77bMbot3Xy/e7X0B3u1t
8W6Ld1u82+Ld//PDOB1wt/8FcLe/hbst3G3hbgt3Xx/cHcCFzwe8gy3gbQFv
C3hbwPv6AO/hF8Ddwy3cbeFuC3dbuPv64O7RF8Ddoy3cbeFuC3dbuPtK4O7z
HtfdHkDZQtwfGuK2IPM7gEyir9Vn4Ux4wxZqtlCzhZot1NwNajY9R7UGbLYP
UG3h5k9wtHYLN78L3Hz2K4+2zyxt4WbLbrZwc3e4GQwGYiyjKwQeMYrw9YWJ
iqf863j25eGLrLgS40onMUwjh4E1vTy1VJHCV0kGL6/kdyoq+sWwow8Zvo7o
ZaZmBb4g2P5qKTcx9o3lib6yrxGX6RVMUM7Fu0xGs74YpSn+/G4qflL0w71p
H1+bpFLxsy4mZnAE6r7Cr9QN/qqISlJ9lV33YYXx7bIXqUqSPlg+CP46K/GN
wzM5hy8q/AkC8VMVgQnLxdL+UDC+f3kmfioAElJ8ZSW/r1cXYlrpmF6ZTq/4
VypGVbmXbfIvTGj/ax301kbWvuFX3r07PRYPD/af9Xp/wcXDN036xXOvgwWj
wMU3oVUa/6tUep6j42Vp8FslQ+jtvXsfIrRZ8wNRZKU8SP0jINKYLNJ0K70z
as3QK7/XYNqDrv/Nrdj90jEKQL8GofgF8vQqTa9Ra0YApH1+l1VZ0m8ZThJ8
cat/uSf9lD3/4BFIwNq1qll5Y1bzFZQrNWH+NQNbVWZYwzcP3tIv/aAWvuKS
UM+0i8f8pmz/istaSS4S+Z9TwNCh+Ldg6p9amUFwoN/9y8yYuoiDLoJbYRAH
Efyqfvcr2e4nRhDyNP/Mdo7BjcPVsPfftlYp1V2XAAA=

-->

</rfc>

