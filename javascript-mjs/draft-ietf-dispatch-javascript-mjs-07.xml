<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2397 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2397.xml">
<!ENTITY RFC2978 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2978.xml">
<!ENTITY RFC3552 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC3629 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3629.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC3987 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3987.xml">
<!ENTITY RFC4329 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4329.xml">
<!ENTITY RFC6265 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6265.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC3236 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3236.xml">
<!ENTITY RFC3875 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3875.xml">
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc docName="draft-ietf-dispatch-javascript-mjs-07" category="info" obsoletes="4329">

  <front>
    <title>ECMAScript Media Types Updates</title>

    <author initials="M." surname="Miller" fullname="Matthew A. Miller">
      <organization>Mozilla</organization>
      <address>
        <email>linuxwolf+ietf@outer-planes.net</email>
      </address>
    </author>
    <author initials="M." surname="Borins" fullname="Myles Borins">
      <organization>Google</organization>
      <address>
        <email>mylesborins@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Bynens" fullname="Mathias Bynens">
      <organization>Google</organization>
      <address>
        <email>mths@google.com</email>
      </address>
    </author>
    <author initials="B." surname="Farias" fullname="Bradley Farias">
      <organization></organization>
      <address>
        <email>bradley.meck@gmail.com</email>
      </address>
    </author>

    <date year="2020" month="April" day="22"/>

    <area>ART</area>
    <workgroup>DISPATCH</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document updates the ECMAScript media types, replacing the existing registrations for “application/javascript” and “text/javascript” with information and requirements aligned with implementation experiences.  This document obsoletes RFC4329, “Scripting Media Types”.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>This memo describes media types for the JavaScript and ECMAScript programming languages.  Refer to the sections “Introduction” and “Overview” in <xref target="ECMA-262"/> for background information on these languages.  This document updates the descriptions and registrations for these media types to reflect existing usage on the Internet.</t>

<t>This document replaces the media types registrations in <xref target="RFC4329"/>, osboleting that document.</t>

<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in BCP 14  <xref target="RFC2119"/>  <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="compatibility" title="Compatibility">

<t>This document defines equivalent processing requirements for the types text/javascript, text/ecmascript, and application/javascript.  The most widely supported media type in use is text/javascript; all others are considered historical and obsolete compared to text/javascript.  Differences in ECMAScript versions have been better dealt with in the processors.</t>

<t>The types defined in this document are applicable to scripts written in <xref target="ECMA-262"/>.  This document does not address scripts written in other languages.  In particular, future editions of <xref target="ECMA-262"/> and extensions to <xref target="ECMA-262"/> are not directly addressed.</t>

<t>This document may be updated to take other content into account.  Updates of this document may introduce new optional parameters; implementations MUST consider the impact of such an update.</t>

</section>
<section anchor="modules" title="Modules">

<t>In order to formalize support for modular programs, <xref target="ECMA-262"/> (starting with 6th Edition) defines two top-level goal symbols (or roots to the abstract syntax tree) for the ECMAScript grammar: Module and Script.  The Script goal represents the original structure where the code executes in the global scope, while the Module goal represents the module system built into ECMAScript starting with 6th Edition.  See the section “ECMAScript Language: Scripts and Modules” of <xref target="ECMA-262"/> for details.</t>

<t>This separation means that (in the absence of additional information) there are two possible interpretations for any given ECMAScript Source Text. The TC39 standards body for ECMAScript has determined that media types are outside of their scope of work <xref target="TC39-MIME-ISSUE"/>.</t>

<t>It is not possible to fully determine if a Source Text of ECMAScript is meant to be parsed in the Module or Script grammar goals based upon content alone. Therefore, scripting environments MUST use out of band information in order to determine what goal a Source Text should be treated as. To this end some scripting environments have chosen to adopt the new file extension of .mjs for this purpose.</t>

<t>This document does not define how fragment identifiers in resource identifiers (<xref target="RFC3986"/>, <xref target="RFC3987"/>) for documents labeled with one of the media types defined in this document are resolved.  An update of this document may define processing of fragment identifiers.</t>

</section>
<section anchor="encoding" title="Encoding">

<t>Refer to <xref target="RFC6265"/> for a discussion of terminology used in this section.  Source text (as defined in <xref target="ECMA-262"/>, section “Source Text”) can be binary source text.  Binary source text is a textual data object that represents source text encoded using a character encoding scheme.  A textual data object is a whole text protocol message or a whole text document, or a part of it, that is treated separately for purposes of external storage and retrieval.  An implementation’s internal representation of source text and source text are not considered binary source text.</t>

<t>Implementations need to determine a character encoding scheme in order to decode binary source text to source text.  The media types defined in this document allow an optional charset parameter to explicitly specify the character encoding scheme used to encode the source text.</t>

<t>How implementations determine the character encoding scheme can be subject to processing rules that are out of the scope of this document.  For example, transport protocols can require that a specific character encoding scheme is to be assumed if the optional charset parameter is not specified, or they can require that the charset parameter is used in certain cases.  Such requirements are not considered part of this document.</t>

<t>Implementations that support binary source text MUST support binary source text encoded using the UTF-8 <xref target="RFC3629"/> character encoding scheme.  Module goal sources MUST be encoded as UTF-8, all other encodings will fail.  Source goal sources SHOULD be encoded as UTF-8; other character encoding schemes MAY be supported, but are discouraged.</t>

<section anchor="charset-parameter" title="Charset Parameter">

<t>The charset parameter provides a means to specify the character encoding scheme of binary source text.  Its value MUST match the mime-charset production defined in <xref target="RFC2978"/>, section 2.3, and SHOULD be a registered charset <xref target="CHARSETS"/>.  An illegal value is a value that does not match that production.</t>

<t>The charset parameter is only used when processing a Script goal source; Module goal sources MUST always be processed as UTF-8.</t>

</section>
<section anchor="character-encoding-scheme-detection" title="Character Encoding Scheme Detection">

<t>It is possible that implementations cannot interoperably determine a single character encoding scheme simply by complying with all requirements of the applicable specifications.  To foster interoperability in such cases, the following algorithm is defined.  Implementations apply this algorithm until a single character encoding scheme is determined.</t>

<t><list style="numbers">
  <t>If the binary source text is not already determined to be a Module goal and starts with a Unicode encoding form signature, the signature determines the encoding.  The following octet sequences, at the very beginning of the binary source text, are considered with their corresponding character encoding schemes:  <vspace blankLines='1'/>
    <figure><artwork><![CDATA[
 +------------------+----------+
 | Leading sequence | Encoding |
 |------------------+----------|
 | EF BB BF         | UTF-8    |
 | FF FE            | UTF-16LE |
 | FE FF            | UTF-16BE |
 +------------------+----------+
]]></artwork></figure>
  <vspace blankLines='1'/>
The longest matching octet sequence determines the encoding. Implementations of this step MUST use these octet sequences to determine the character encoding scheme, even if the determined scheme is not supported.  If this step determines the character encoding scheme, the octet sequence representing the Unicode encoding form signature MUST be ignored when decoding the binary source text to source text.</t>
  <t>If a charset parameter with a legal and understood value is specified, the value determines the character encoding scheme.</t>
  <t>The character encoding scheme is determined to be UTF-8.</t>
</list></t>

<t>If the character encoding scheme is determined to be UTF-8 through any means other than step 1 as defined above and the binary source text starts with the octet sequence EF BB BF, the octet sequence is ignored when decoding the binary source text to source text.  (The sequence will also be ignored if step 2 determines the character encoding scheme per the requirements in step 2).</t>

</section>
<section anchor="character-encoding-scheme-error-handling" title="Character Encoding Scheme Error Handling">

<t>Binary source text that is not properly encoded for the determined character encoding can pose a security risk, as discussed in section 5.  That said, because of the varied and complex environments scripts are executed in, most of the error handling specifics are left to the processors.  The following are broad guidelines that processors follow.</t>

<t>If binary source text is determined to have been encoded using a certain character encoding scheme that the implementation is unable to process, implementations can consider the resource unsupported (i.e., do not decode the binary source text using a different character encoding scheme).</t>

<t>Binary source text can be determined to have been encoded using a certain character encoding scheme but contain octet sequences that are not legal according to that scheme.  Implementations can substitute those illegal sequences with the replacement character U+FFFD (properly encoded for the scheme), or stop processing altogether.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Refer to <xref target="RFC3552"/> for a discussion of terminology used in this section.  Examples in this section and discussions of interactions of host environments with scripts, modules, and extensions to <xref target="ECMA-262"/> are to be understood as non-exhaustive and of a purely illustrative nature.</t>

<t>The programming language defined in <xref target="ECMA-262"/> is not intended to be computationally self-sufficient, rather it is expected that the computational environment provides facilities to programs to enable specific functionality.  Such facilities constitute unknown factors and are thus considered out of the scope of this document.</t>

<t>Derived programming languages are permitted to include additional functionality that is not described in <xref target="ECMA-262"/>; such functionality constitutes an unknown factor and is thus considered out of the scope of this document.  In particular, extensions to <xref target="ECMA-262"/> defined for the JavaScript programming language are not discussed in this document.</t>

<t>Uncontrolled execution of scripts can be exceedingly dangerous. Implementations that execute scripts MUST give consideration to their application’s threat models and those of the individual features they implement; in particular, they MUST ensure that untrusted content is not executed in an unprotected environment.</t>

<t>Module scripts in ECMAScript can request the fetching and processing of additional scripts, called importing.  Implementations that support modules need to process imported sources in the same way scripts.  Further, there may be additional privacy and security concerns depending on the location(s) the original script and its imported modules are obtained from.  For instance, a script obtained from “host-a.example” could request to import a script from “host-b.example”, which could expose information about the executing environment (e.g., IP address) to “host-b.example”.  See the section “ECMAScript Language: Scripts and Modules” in <xref target="ECMA-262"/> for details.</t>

<t>Specifications for host environment facilities and for derived programming languages should include security considerations.  If an implementation supports such facilities, the respective security considerations apply.  In particular, if scripts can be referenced from or included in specific document formats, the considerations for the embedding or referencing document format apply.</t>

<t>For example, scripts embedded in application/xhtml+xml <xref target="RFC3236"/> documents could be enabled through the host environment to manipulate the document instance, which could cause the retrieval of remote resources; security considerations regarding retrieval of remote resources of the embedding document would apply in this case.</t>

<t>This circumstance can further be used to make information, that is normally only available to the script, available to a web server by encoding the information in the resource identifier of the resource, which can further enable eavesdropping attacks.  Implementation of such facilities is subject to the security considerations of the host environment, as discussed above.</t>

<t>The programming language defined in <xref target="ECMA-262"/> does include facilities to loop, cause computationally complex operations, or consume large amounts of memory; this includes, but is not limited to, facilities that allow dynamically generated source text to be executed (e.g., the eval() function); uncontrolled execution of such features can cause denial of service, which implementations MUST protect against.</t>

<t>With the addition of SharedArrayBuffer objects in ECMAScript version 8, it could be possible to implement a high-resolution timer which could lead to certain types of timin`g and side-channel attacks (e.g., <xref target="SPECTRE"/>).  Implementations can take steps to mitigate this concern, such as disabling or removing support for SharedArrayBuffer objects, or take additional steps to ensure access to this shared memory is only accessible between execution contexts that have some form of mutual trust.</t>

<t>A host environment can provide facilities to access external input. Scripts that pass such input to the eval() function or similar language features can be vulnerable to code injection attacks. Scripts are expected to protect against such attacks.</t>

<t>A host environment can provide facilities to output computed results in a user-visible manner.  For example, host environments supporting a graphical user interface can provide facilities that enable scripts to present certain messages to the user.  Implementations MUST take steps to avoid confusion of the origin of such messages.  In general, the security considerations for the host environment apply in such a case as discussed above.</t>

<t>Implementations are required to support the UTF-8 character encoding scheme; the security considerations of <xref target="RFC3629"/> apply.  Additional character encoding schemes may be supported; support for such schemes is subject to the security considerations of those schemes.</t>

<t>Source text is expected to be in Unicode Normalization Form C. Scripts and implementations MUST consider security implications of unnormalized source text and data.  For a detailed discussion of such implications refer to the security considerations in <xref target="RFC3629"/>.</t>

<t>Scripts can be executed in an environment that is vulnerable to code injection attacks.  For example, a CGI script <xref target="RFC3875"/> echoing user input could allow the inclusion of untrusted scripts that could be executed in an otherwise trusted environment.  This threat scenario is subject to security considerations that are out of the scope of this document.</t>

<t>The “data” resource identifier scheme <xref target="RFC2397"/>, in combination with the types defined in this document, could be used to cause execution of untrusted scripts through the inclusion of untrusted resource identifiers in otherwise trusted content.  Security considerations of <xref target="RFC2397"/> apply.</t>

<t>Implementations can fail to implement a specific security model or other means to prevent possibly dangerous operations.  Such failure could possibly be exploited to gain unauthorized access to a system or sensitive information; such failure constitutes an unknown factor and is thus considered out of the scope of this document.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>The media type registrations herein are divided into two major categories: the sole media type “text/javascript” which is now in common usage, and all of the media types that are obsolete.</t>

<t>For both categories, The ECMAScript media types are to be updated to point to a non-vendor specific standard undated specification of ECMAScript. In addition, a new file extension of .mjs is to be added to the list of file extensions with the restriction that it must correspond to the Module grammar of <xref target="ECMA-262"/>. Finally, the <xref target="HTML"/> specification uses “text/javascript” as the default media type of ECMAScript when preparing script tags; therefore, “text/javascript” intended usage is to be moved from OBSOLETE to COMMON.</t>

<section anchor="common-javascript-media-types" title="Common Javascript Media Types">

<section anchor="textjavascript" title="text/javascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  COMMON</t>
  <t hangText='Restrictions on usage:'>
  The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
</section>
<section anchor="historic-javascript-media-types" title="Historic Javascript Media Types">

<t>The following media types are added or updated for historical purposes.  All herein have an intended usage of OBSOLETE, and are not expected to be in use with modern implementations.</t>

<section anchor="applicationecmascript" title="application/ecmascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  application</t>
  <t hangText='Subtype name:'>
  ecmascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .es, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="applicationjavascript" title="application/javascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  application</t>
  <t hangText='Subtype name:'>
  javascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  charset, see section 4.1 of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;.</t>
</list></t>

</section>
<section anchor="applicationx-ecmascript" title="application/x-ecmascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  application</t>
  <t hangText='Subtype name:'>
  x-ecmascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .es, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="applicationx-javascript" title="application/x-javascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  application</t>
  <t hangText='Subtype name:'>
  x-javascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textecmascript" title="text/ecmascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  ecmascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .es, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjavascript10" title="text/javascript1.0">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript1.0</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjavascript11" title="text/javascript1.1">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript1.1</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjavascript12" title="text/javascript1.2">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript1.2</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjavascript13" title="text/javascript1.3">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript1.3</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjavascript14" title="text/javascript1.4">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript1.4</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjavascript15" title="text/javascript1.5">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  javascript1.5</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textjscript" title="text/jscript">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  jscript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textlivescript" title="text/livescript">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  livescript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textx-ecmascript" title="text/x-ecmascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  x-ecmascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .es, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
<section anchor="textx-javascript" title="text/x-javascript">

<t><list style="hanging">
  <t hangText='Type name:'>
  text</t>
  <t hangText='Subtype name:'>
  x-javascript</t>
  <t hangText='Required parameters:'>
  N/A</t>
  <t hangText='Optional parameters:'>
  : charset, see section 4.1 of [this document].</t>
  <t hangText='Encoding considerations:'>
  Binary</t>
  <t hangText='Security considerations:'>
  See section 5 of [this document]..</t>
  <t hangText='Interoperability considerations:'>
  See various sections of [this document].</t>
  <t hangText='Published specification:'>
  [this document]</t>
  <t hangText='Applications which use this media type:'>
  Script interpreters as discussed in [this document].</t>
  <t hangText='Additional information:'>
        <list style="hanging">
        <t hangText='Magic number(s):'>
        n/a</t>
        <t hangText='File extension(s):'>
        .js, .mjs</t>
        <t hangText='Macintosh File Type Code(s):'>
        TEXT</t>
      </list>
  </t>
  <t hangText='Person &amp; email address to contact for further information:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Intended usage:'>
  OBSOLETE</t>
  <t hangText='Restrictions on usage:'>
  The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  <t hangText='Author:'>
  See Author’s Address section of [this document].</t>
  <t hangText='Change controller:'>
  IESG &lt;iesg@ietf.org&gt;</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2397;
&RFC2978;
&RFC3552;
&RFC3629;
&RFC3986;
&RFC3987;
&RFC4329;
&RFC6265;
&RFC8174;
<reference anchor="CHARSETS" target="https://www.iana.org/assignments/character-sets">
  <front>
    <title>Assigned character sets</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ECMA-262" target="https://ecma-international.org/publications/standards/Ecma-262.htm">
  <front>
    <title>Standard ECMA-262: ECMAScript Language Specification</title>
    <author >
      <organization>Ecma International</organization>
    </author>
    <date year="2019" month="June"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC3236;
&RFC3875;
<reference anchor="HTML" target="https://html.spec.whatwg.org/multipage/scripting.html#prepare-a-script">
  <front>
    <title>HTML Living Standard</title>
    <author >
      <organization>WHATWG</organization>
    </author>
    <date year="2017" month="August"/>
  </front>
</reference>
<reference anchor="SPECTRE" target="https://arxiv.org/abs/1801.01203">
  <front>
    <title>Spectre Attacks: Exploiting Speculative Execution</title>
    <author initials="P." surname="Kocher" fullname="Paul Kocher">
      <organization></organization>
    </author>
    <author initials="A." surname="Fogh" fullname="Anders Fogh">
      <organization></organization>
    </author>
    <author initials="D." surname="Gerkin" fullname="Daniel Gerkin">
      <organization></organization>
    </author>
    <author initials="D." surname="Gruss" fullname="Daniel Gruss">
      <organization></organization>
    </author>
    <author initials="W." surname="Haas" fullname="Werner Haas">
      <organization></organization>
    </author>
    <author initials="M." surname="Hamburg" fullname="Mike Hamburg">
      <organization></organization>
    </author>
    <author initials="M." surname="Lipp" fullname="Moritz Lipp">
      <organization></organization>
    </author>
    <author initials="S." surname="Mangard" fullname="Stefan Mangard">
      <organization></organization>
    </author>
    <author initials="T." surname="Prescher" fullname="Thomas Prescher">
      <organization></organization>
    </author>
    <author initials="M." surname="Schwarz" fullname="Michael Schwarz">
      <organization></organization>
    </author>
    <author initials="Y." surname="Yarom" fullname="Yuval Yarom">
      <organization></organization>
    </author>
    <date year="2018" month="January"/>
  </front>
</reference>
<reference anchor="TC39-MIME-ISSUE" target="https://web.archive.org/web/20170814193912/https://github.com/tc39/ecma262/issues/322">
  <front>
    <title>Add `application/javascript+module` mime to remove ambiguity</title>
    <author >
      <organization>TC39</organization>
    </author>
    <date year="2017" month="August"/>
  </front>
</reference>


    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>This work builds upon its antecedent document, authored by Bjoern Hoehrmann.  The authors would like to thank Adam Roach, Anna van Kesteren, Allen Wirfs-Brock, Alexey Melnikov, James Snell, Mark Nottingham, Murray Kucherawy, and Suresh Krishnan for their guidance and feedback throughout this process.</t>

</section>
<section anchor="changes-from-rfc-4329" title="Changes from RFC 4329">

<t><list style="symbols">
  <t>Added a section discussing ECMAscript modules and the impact on processing.</t>
  <t>Updated the Security Considerations to discuss concerns associated with ECMAscript modules and SharedArrayBuffers.</t>
  <t>Updated the character encoding scheme detection to remove normative guidance on its use, to better reflect operational reality.</t>
  <t>Changed the intended usage of the media type text/javascript from obsolete to common.</t>
  <t>Changed the intended usage for all other script media types to obsolete.</t>
  <t>Updated various references where the original has been osboleted</t>
  <t>Updated references to ECMA-262 to match the version at time of publication.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

