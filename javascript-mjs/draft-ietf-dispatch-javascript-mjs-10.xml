<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.5.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2397 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2397.xml">
<!ENTITY RFC2978 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2978.xml">
<!ENTITY RFC3552 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC3629 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3629.xml">
<!ENTITY RFC4329 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4329.xml">
<!ENTITY RFC6365 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6365.xml">
<!ENTITY RFC6838 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6838.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC3236 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3236.xml">
<!ENTITY RFC3875 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3875.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC3987 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3987.xml">
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dispatch-javascript-mjs-10" category="info" obsoletes="4329">

  <front>
    <title>ECMAScript Media Types Updates</title>

    <author initials="M." surname="Miller" fullname="Matthew A. Miller">
      <organization></organization>
      <address>
        <email>linuxwolf+ietf@outer-planes.net</email>
      </address>
    </author>
    <author initials="M." surname="Borins" fullname="Myles Borins">
      <organization>GitHub</organization>
      <address>
        <email>mylesborins@github.com</email>
      </address>
    </author>
    <author initials="M." surname="Bynens" fullname="Mathias Bynens">
      <organization>Google</organization>
      <address>
        <email>mths@google.com</email>
      </address>
    </author>
    <author initials="B." surname="Farias" fullname="Bradley Farias">
      <organization></organization>
      <address>
        <email>bradley.meck@gmail.com</email>
      </address>
    </author>

    <date year="2021" month="October" day="12"/>

    <area>ART</area>
    <workgroup>DISPATCH</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document describes the registration of media types for the ECMAScript and JavaScript programming languages and conformance requirements for implementations of these types. This document obsoletes RFC4329, "Scripting Media Types", replacing the previous registrations for "text/javascript" and "application/javascript" with information and requirements aligned with implementation experiences.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>This memo describes media types for the JavaScript and ECMAScript programming languages.  Refer to the sections "Introduction" and "Overview" in <xref target="ECMA-262"/> for background information on these languages.  This document updates the descriptions and registrations for these media types to reflect existing usage on the Internet, and provides up-to-date security considerations.</t>

<t>This document replaces the media types registrations in <xref target="RFC4329"/>, and updates the requirements for implementations using those media types defined in <xref target="RFC4329"/> based on current existing practices. As a consequence, this document obsoletes <xref target="RFC4329"/>.</t>

<section anchor="terminology"><name>Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14  <xref target="RFC2119"/>  <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="compatibility"><name>Compatibility</name>

<t>This document defines equivalent processing requirements for the types text/javascript, text/ecmascript, and application/javascript.  The most widely supported media type in use is text/javascript; all others are considered historical and obsolete compared to text/javascript.</t>

<t>The types defined in this document are applicable to scripts written in <xref target="ECMA-262"/>.  Later editions of <xref target="ECMA-262"/> are not directly addressed, although it is expected that implementations will behave as if applicability were extended to them.  This document does not address other extensions to <xref target="ECMA-262"/> or scripts written in other languages.</t>

<t>This document may be updated to take other content into account.  Updates of this document may introduce new optional parameters; implementations MUST consider the impact of such an update.</t>

<t>The definitions in this document reflect the current state of implementation across the JavaScript ecosystem, in web browsers and other environments such as Node.js alike, in order to guarantee backwards compatibility with existing applications as much as possible.</t>

</section>
<section anchor="modules"><name>Modules</name>

<t>In order to formalize support for modular programs, <xref target="ECMA-262"/> (starting with 6th Edition) defines two top-level goal symbols (or roots to the abstract syntax tree) for the ECMAScript grammar: Module and Script.  The Script goal represents the original structure where the code executes in the global scope, while the Module goal represents the module system built into ECMAScript starting with 6th Edition.  See the section "ECMAScript Language: Scripts and Modules" of <xref target="ECMA-262"/> for details.</t>

<t>This separation means that (in the absence of additional information) there are two possible interpretations for any given ECMAScript source text. The TC39 standards body for ECMAScript has determined that media types are outside of their scope of work <xref target="TC39-MIME-ISSUE"/>.</t>

<t>It is not possible to fully determine if a source text of ECMAScript is meant to be parsed using the Module or Script grammar goals based upon content alone. Therefore, scripting environments use out of band information in order to determine what goal should be used. Some scripting environments have chosen to adopt the file extension of .mjs for this purpose.</t>

<t>This document does not define how fragment identifiers in resource identifiers (<xref target="RFC3986"/>, <xref target="RFC3987"/>) for documents labeled with one of the media types defined in this document are resolved.  An update of this document may define processing of fragment identifiers.</t>

</section>
<section anchor="encoding"><name>Encoding</name>

<t>Refer to <xref target="RFC6365"/> for a discussion of terminology used in this section.  Source text (as defined in <xref target="ECMA-262"/>, section "Source Text") can be binary source text.  Binary source text is a textual data object that represents source text encoded using a character encoding scheme.  A textual data object is a whole text protocol message or a whole text document, or a part of it, that is treated separately for purposes of external storage and retrieval.  An implementation's internal representation of source text is not considered binary source text.</t>

<t>Implementations need to determine a character encoding scheme in order to decode binary source text to source text.  The media types defined in this document allow an optional charset parameter to explicitly specify the character encoding scheme used to encode the source text.</t>

<t>How implementations determine the character encoding scheme can be subject to processing rules that are out of the scope of this document.  For example, transport protocols can require that a specific character encoding scheme is to be assumed if the optional charset parameter is not specified, or they can require that the charset parameter is used in certain cases.  Such requirements are not considered part of this document.</t>

<t>Implementations that support binary source text MUST support binary source text encoded using the UTF-8 <xref target="RFC3629"/> character encoding scheme.  Module goal sources MUST be encoded as UTF-8, all other encodings will fail.  Source goal sources SHOULD be encoded as UTF-8; other character encoding schemes MAY be supported, but are discouraged.  Whether U+FEFF is processed as a Byte Order Mark (BOM) signature or not depends on the host environment, and is not considered part of this document.</t>

<section anchor="charset-parameter"><name>Charset Parameter</name>

<t>The charset parameter provides a means to specify the character encoding scheme of binary source text.  Its value SHOULD be a registered charset <xref target="CHARSETS"/>, and is considered valid if it matches the mime-charset production defined in <xref target="RFC2978"/>, section 2.3.</t>

<t>The charset parameter is only used when processing a Script goal source; Module goal sources MUST always be processed as UTF-8.</t>

</section>
<section anchor="character-encoding-scheme-detection"><name>Character Encoding Scheme Detection</name>

<t>It is possible that implementations cannot interoperably determine a single character encoding scheme simply by complying with all requirements of the applicable specifications.  To foster interoperability in such cases, the following algorithm is defined.  Implementations apply this algorithm until a single character encoding scheme is determined.</t>

<t><list style="numbers">
  <t>If the binary source text is not already determined to be using a Module goal and starts with a Unicode encoding form signature, the signature determines the encoding.  The following octet sequences, at the very beginning of the binary source text, are considered with their corresponding character encoding schemes:  <vspace blankLines='1'/>
    <figure><artwork><![CDATA[
 +------------------+----------+
 | Leading sequence | Encoding |
 |------------------+----------|
 | EF BB BF         | UTF-8    |
 | FF FE            | UTF-16LE |
 | FE FF            | UTF-16BE |
 +------------------+----------+
]]></artwork></figure>
  <vspace blankLines='1'/>
Implementations of this step MUST use these octet sequences to determine the character encoding scheme, even if the determined scheme is not supported.  If this step determines the character encoding scheme, the octet sequence representing the Unicode encoding form signature MUST be ignored when decoding the binary source text.</t>
  <t>If a charset parameter is specified and its value is valid and supported by the implementation, the value determines the character encoding scheme.</t>
  <t>If no other character encoding scheme is determined from the previous steps, it is assumed to be UTF-8.</t>
</list></t>

<t>If the character encoding scheme is determined to be UTF-8 through any means other than step 1 as defined above and the binary source text starts with the octet sequence EF BB BF, the octet sequence is ignored when decoding the binary source text.</t>

</section>
<section anchor="character-encoding-scheme-error-handling"><name>Character Encoding Scheme Error Handling</name>

<t>Binary source text that is not properly encoded for the determined character encoding can pose a security risk, as discussed in section 5.  That said, because of the varied and complex environments scripts are executed in, most of the error handling specifics are left to the processors.  The following are broad guidelines that processors follow.</t>

<t>If binary source text is determined to have been encoded using a certain character encoding scheme that the implementation is unable to process, implementations can consider the resource unsupported (i.e., do not decode the binary source text using a different character encoding scheme).</t>

<t>Binary source text can be determined to have been encoded using a certain character encoding scheme but contain octet sequences that are not valid according to that scheme.  Implementations can substitute those invalid sequences with the replacement character U+FFFD (properly encoded for the scheme), or stop processing altogether.</t>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>Refer to <xref target="RFC3552"/> for a discussion of terminology used in this section.  Examples in this section and discussions of interactions of host environments with scripts, modules, and extensions to <xref target="ECMA-262"/> are to be understood as non-exhaustive and of a purely illustrative nature.</t>

<t>The programming language defined in <xref target="ECMA-262"/> is not intended to be computationally self-sufficient, rather it is expected that the computational environment provides facilities to programs to enable specific functionality.  Such facilities constitute unknown factors and are thus considered out of the scope of this document.</t>

<t>Derived programming languages are permitted to include additional functionality that is not described in <xref target="ECMA-262"/>; such functionality constitutes an unknown factor and is thus considered out of the scope of this document.  In particular, extensions to <xref target="ECMA-262"/> defined for the JavaScript programming language are not discussed in this document.</t>

<t>Uncontrolled execution of scripts can be exceedingly dangerous. Implementations that execute scripts MUST give consideration to their application's threat models and those of the individual features they implement; in particular, they MUST ensure that untrusted content is not executed in an unprotected environment.</t>

<t>Module scripts in ECMAScript can request the fetching and processing of additional scripts, called importing.  Implementations that support modules need to process imported sources in the same way as scripts.  Further, there may be additional privacy and security concerns depending on the location(s) the original script and its imported modules are obtained from.  For instance, a script obtained from "host-a.example" could request to import a script from "host-b.example", which could expose information about the executing environment (e.g., IP address) to "host-b.example".  See the section "ECMAScript Language: Scripts and Modules" in <xref target="ECMA-262"/> for details.</t>

<t>Specifications for host environment facilities and for derived programming languages should include security considerations.  If an implementation supports such facilities, the respective security considerations apply.  In particular, if scripts can be referenced from or included in specific document formats, the considerations for the embedding or referencing document format apply.</t>

<t>For example, scripts embedded in application/xhtml+xml <xref target="RFC3236"/> documents could be enabled through the host environment to manipulate the document instance, which could cause the retrieval of remote resources; security considerations regarding retrieval of remote resources of the embedding document would apply in this case.</t>

<t>This circumstance can further be used to make information, that is normally only available to the script, available to a web server by encoding the information in the resource identifier of the resource, which can further enable eavesdropping attacks.  Implementation of such facilities is subject to the security considerations of the host environment, as discussed above.</t>

<t>The programming language defined in <xref target="ECMA-262"/> does include facilities to loop, cause computationally complex operations, or consume large amounts of memory; this includes, but is not limited to, facilities that allow dynamically generated source text to be executed (e.g., the eval() function); uncontrolled execution of such features can cause denial of service, which implementations MUST protect against.</t>

<t>With the addition of SharedArrayBuffer objects in ECMAScript version 8, it could be possible to implement a high-resolution timer which could lead to certain types of timin`g and side-channel attacks (e.g., <xref target="SPECTRE"/>).  Implementations can take steps to mitigate this concern, such as disabling or removing support for SharedArrayBuffer objects, or take additional steps to ensure access to this shared memory is only accessible between execution contexts that have some form of mutual trust.</t>

<t>A host environment can provide facilities to access external input. Scripts that pass such input to the eval() function or similar language features can be vulnerable to code injection attacks. Scripts are expected to protect against such attacks.</t>

<t>A host environment can provide facilities to output computed results in a user-visible manner.  For example, host environments supporting a graphical user interface can provide facilities that enable scripts to present certain messages to the user.  Implementations MUST take steps to avoid confusion of the origin of such messages.  In general, the security considerations for the host environment apply in such a case as discussed above.</t>

<t>Implementations are required to support the UTF-8 character encoding scheme; the security considerations of <xref target="RFC3629"/> apply.  Additional character encoding schemes may be supported; support for such schemes is subject to the security considerations of those schemes.</t>

<t>Source text is expected to be in Unicode Normalization Form C. Scripts and implementations MUST consider security implications of unnormalized source text and data.  For a detailed discussion of such implications refer to the security considerations in <xref target="RFC3629"/>.</t>

<t>Scripts can be executed in an environment that is vulnerable to code injection attacks.  For example, a CGI script <xref target="RFC3875"/> echoing user input could allow the inclusion of untrusted scripts that could be executed in an otherwise trusted environment.  This threat scenario is subject to security considerations that are out of the scope of this document.</t>

<t>The "data" resource identifier scheme <xref target="RFC2397"/>, in combination with the types defined in this document, could be used to cause execution of untrusted scripts through the inclusion of untrusted resource identifiers in otherwise trusted content.  Security considerations of <xref target="RFC2397"/> apply.</t>

<t>Implementations can fail to implement a specific security model or other means to prevent possibly dangerous operations.  Such failure could possibly be exploited to gain unauthorized access to a system or sensitive information; such failure constitutes an unknown factor and is thus considered out of the scope of this document.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>The media type registrations herein are divided into two major categories: the sole media type "text/javascript" which is now in common usage, and all of the media types that are obsolete.</t>

<t>For both categories, the media types are updated to reference <xref target="ECMA-262"/>. In addition, a new file extension of .mjs is added to the list of file extensions with the restriction that contents should be parsed using the Module goal. Finally, the <xref target="HTML"/> specification uses "text/javascript" as the default media type of ECMAScript when preparing script tags; therefore, "text/javascript" intended usage is to be moved from OBSOLETE to COMMON.</t>

<t>These changes are to be reflected in the IANA Media Types registry in accordance with <xref target="RFC6838"/>. All registrations will point to this document as reference. The outdated note stating that the "text/javascript" media type has been "OBSOLETED in favor of application/javascript" is to be removed. The outdated note stating that the "text/ecmascript" media type has been "OBSOLETED in favor of application/ecmascript" is to be removed. IANA is requested to add the note "OBSOLETED in favor of text/javascript" to all registrations except "text/javascript".</t>

<section anchor="common-javascript-media-types"><name>Common JavaScript Media Types</name>

<section anchor="textjavascript"><name>text/javascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document] and <xref target="RFC4329"/>.</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>COMMON</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
</section>
<section anchor="historic-javascript-media-types"><name>Historic Javascript Media Types</name>

<t>The following media types are added or updated for historical purposes.  All herein have an intended usage of OBSOLETE, and are not expected to be in use with modern implementations.</t>

<section anchor="applicationecmascript"><name>application/ecmascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>application</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>ecmascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.es, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document] and <xref target="RFC4329"/>.</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="applicationjavascript"><name>application/javascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>application</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also section 4.1 of [this document] regarding the charset parameter.</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document] and <xref target="RFC4329"/>.</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;.</t>
  </dd>
</dl>

</section>
<section anchor="applicationx-ecmascript"><name>application/x-ecmascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>application</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>x-ecmascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.es, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="applicationx-javascript"><name>application/x-javascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>application</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>x-javascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textecmascript"><name>text/ecmascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>ecmascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.es, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document] and <xref target="RFC4329"/>.</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjavascript10"><name>text/javascript1.0</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript1.0</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjavascript11"><name>text/javascript1.1</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript1.1</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjavascript12"><name>text/javascript1.2</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript1.2</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjavascript13"><name>text/javascript1.3</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript1.3</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjavascript14"><name>text/javascript1.4</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript1.4</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjavascript15"><name>text/javascript1.5</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript1.5</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjscript"><name>text/jscript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>jscript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textlivescript"><name>text/livescript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>livescript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>See various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textx-ecmascript"><name>text/x-ecmascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>x-ecmascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.es, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textx-javascript"><name>text/x-javascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>x-javascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2397;
&RFC2978;
&RFC3552;
&RFC3629;
&RFC4329;
&RFC6365;
&RFC6838;
&RFC8174;
<reference anchor="CHARSETS" target="https://www.iana.org/assignments/character-sets">
  <front>
    <title>Assigned character sets</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ECMA-262" target="https://262.ecma-international.org/12.0/">
  <front>
    <title>ECMAScript 2021 language specification, ECMA-262 12th Edition, June 2021</title>
    <author >
      <organization>Ecma International</organization>
    </author>
    <date year="2021" month="June"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC3236;
&RFC3875;
&RFC3986;
&RFC3987;
<reference anchor="HTML" target="https://html.spec.whatwg.org/multipage/scripting.html#prepare-a-script">
  <front>
    <title>HTML Living Standard</title>
    <author >
      <organization>WHATWG</organization>
    </author>
    <date year="2017" month="August"/>
  </front>
</reference>
<reference anchor="SPECTRE" target="https://arxiv.org/abs/1801.01203">
  <front>
    <title>Spectre Attacks: Exploiting Speculative Execution</title>
    <author initials="P." surname="Kocher" fullname="Paul Kocher">
      <organization></organization>
    </author>
    <author initials="A." surname="Fogh" fullname="Anders Fogh">
      <organization></organization>
    </author>
    <author initials="D." surname="Gerkin" fullname="Daniel Gerkin">
      <organization></organization>
    </author>
    <author initials="D." surname="Gruss" fullname="Daniel Gruss">
      <organization></organization>
    </author>
    <author initials="W." surname="Haas" fullname="Werner Haas">
      <organization></organization>
    </author>
    <author initials="M." surname="Hamburg" fullname="Mike Hamburg">
      <organization></organization>
    </author>
    <author initials="M." surname="Lipp" fullname="Moritz Lipp">
      <organization></organization>
    </author>
    <author initials="S." surname="Mangard" fullname="Stefan Mangard">
      <organization></organization>
    </author>
    <author initials="T." surname="Prescher" fullname="Thomas Prescher">
      <organization></organization>
    </author>
    <author initials="M." surname="Schwarz" fullname="Michael Schwarz">
      <organization></organization>
    </author>
    <author initials="Y." surname="Yarom" fullname="Yuval Yarom">
      <organization></organization>
    </author>
    <date year="2018" month="January"/>
  </front>
</reference>
<reference anchor="TC39-MIME-ISSUE" target="https://web.archive.org/web/20170814193912/https://github.com/tc39/ecma262/issues/322">
  <front>
    <title>Add `application/javascript+module` mime to remove ambiguity</title>
    <author >
      <organization>TC39</organization>
    </author>
    <date year="2017" month="August"/>
  </front>
</reference>


    </references>


<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>This work builds upon its antecedent document, authored by Bjoern Hoehrmann.  The authors would like to thank Adam Roach, Anne van Kesteren, Allen Wirfs-Brock, Alexey Melnikov, James Snell, Mark Nottingham, Murray Kucherawy, and Suresh Krishnan for their guidance and feedback throughout this process.</t>

</section>
<section anchor="changes-from-rfc-4329"><name>Changes from RFC 4329</name>

<t><list style="symbols">
  <t>Added a section discussing ECMAScript modules and the impact on processing.</t>
  <t>Updated the Security Considerations to discuss concerns associated with ECMAScript modules and SharedArrayBuffers.</t>
  <t>Updated the character encoding scheme detection to remove normative guidance on its use, to better reflect operational reality.</t>
  <t>Changed the intended usage of the media type text/javascript from obsolete to common.</t>
  <t>Changed the intended usage for all other script media types to obsolete.</t>
  <t>Updated various references where the original has been obsoleted.</t>
  <t>Updated references to ECMA-262 to match the version at time of publication.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAOA5ZWEAA+1dbXMbN5L+zl+Bkqsu9oWkLMmv8tVWKFmKdbFsnyVXLrXZ
ugWHIAlrOOANZkQxXv/36xcAgxkO5dh3t0mcSW2tKRKvje6nn24AM4PBoFfo
IlWH4uT4fHSR5HpZiHM10VJcrpfKinfLiSyU7cnxOFfXh72JSTK5gPKTXE6L
gVbFdDDRdimLZD54L6+lpTYGi/d2sHe/l0DlmcnXh0JnU9Pr6WV+KIq8tMX+
/ftP7+/3ZK7koRi9veytTH41y025PBTPzy7ejC6PX/Su1Bq+nhyKs6xQeaaK
wXPstmfG1qQKxnUoHhzsP+31bCGzyX/J1GQwtMz0lvpQ/LUwSV/A/+lsorKi
L6zJi1xNLXxaL9yHItcJ/JSYxVK6DwsoDD/pLNWZ+luvJ8tibvLDnhj0BPyn
M+j1fCjOdZqqnL5iiZzLopirlRjVfjP5TGb6F1lokx3SN2ohdXoooPXyZmXS
6bcoxO9MCTMcLFOZKTuEmTa7OzI5fIy7W6ewPtHXtZ7E97p4UY7jDhdYYUzl
v5vpYl6OhzDbjX7Wmar3I4u5ljb+odGTMbNU1Xoq5tAFfb3RxdFQnMocGoy6
OMrlJFXr+IetYhtz2eFCJVffzfA76qKXmXwBpa8Vln57ery/t/fUfzx4+th/
fPr4ift48PDhvv/4aN+XRXVyHx8dPHroPz458NWe7D1+cNiDz8cvRm8vTi4v
eHRBSYQbPejs6NWI/nYWtjOyVs8yNRHJXOagbSoXVhV2hwvJfKaKQzEviqU9
3N1drVZDLTM5hLZ2JdUkxdwNlQdYGeqi5Q72H+1vHchJspDOgkieMq0NK7L8
/fv7ewJUcFbKmRJ2qRI91QlV6od+xN5+MRcnE81f/3uZKarI80C4OKy+bJ0b
NDJUMKiBjgdFM93bH97fBZwAtAjr6RZp/+CRX68nj/3KHDx98qj6SMv84vL8
5VZZ/PhidPnj9/H8sbh4qa91NhMXCCMyn0QzGZUzQCuYy97j1rnMi0U6REkN
V3NZrGY0i0WZFnoJMtxlOIS2h1jwzjJXS4C8gRzwDzi3izcnx5dvT9qGPHD/
ekN5I8tU/GCSuQOXzRIjwLrcilMzm28p8RzsSqXie5Vf6ewTZQCo7ZYiPyIe
5+KFlNtKnOsrBb8vxmU+21YE0Kj4BaS/XG4pcVGoqcwAhLKZX5fNQpdzswCE
epMre4tozjWYDszqIpmvZP7LllI/ldcyFT/JHEElUpOdC1hjcB9iVBQyuQIk
O7lZpkYXpDfwW5mSusLX8Bk1umYPMitlvkY1etKqRjK/0dds62O7u/fk/t7w
/t7+/QMcwyWo9uD87PxkcHZx8a5VUUi3sVwdcCYT8Xe5XKbOhncrB/3twkzK
VP1dLPRCgZMUuVoYGD0sl56VuljHo/+UDazUeCjzZA7TpynA37tY+P6TvQd7
Tw+e7u3v+qKV49ktkoOnuwgDAAe72tpS2d2D/f1erzcYDASIoUCc6/Uu59oK
4B0l4p+YKJzAGFwfOFsY9UxjOZydMFOxIOpSEHUBBKEyEb6BdcNSXEv35zI3
s1wuFriEHvUsFUoMA1CWYB//XWoQD6IvNaoXy5T+pG4t9gv9WMX9DkV9wIGr
ePfSB13yqBBzrZ0+dAUEIMHvceAAFtfalLY2Sx7CTqFuimg5d2jUO+1rvSNW
IHURMBVEhaVr85IpuyYuWZugUDdLlWsFsrBDXpyFnoAT7vXuoFvJQZMSLOiW
agGaFC1T25JEa4AjiVaodUmGgO9qCmgDeorVrUpYFDtx904Gr69Vfq3Vagcm
LD588F7r40fqfQy2iywTSsbygP/xEsZ91texZCZMA+DZLXkQLMvmCnFz8eTJ
yKYpjB0kCqVxiqVFR8u9B5LbpyZBEtcaOoKOB4UZYOc48RIQc436aeFH1+Gw
aSSsR26w8Rjq4yQBOa38+JG7jaf5Sc0vLeuqaUx1oqYataneAQjfwpcwW5hF
juMMcliiqWtUMDECidL8oHPUOaDwW+wpahokcOeOuFQ5KI5JzWyNElEC4geB
AQRoyvm7i0uwMPpXvHpNn9+e/Me7s7cnz/HzxYvRy5fhgy9x8eL1u5fPq09V
zePX5+cnr55zZfhWNL46H/2003ca+eby7PWr0UvSyPpkgAugXoyVICoEFl+A
hKQN9kMyPDp+I/YeCJ4wEluQJf+BbBT+WM1Vxp2ZLF27P2EF1wIQQckcG5Fp
KhK51IVMIbqBLuzcrDIB/lKh9MQxhkCFHusUFGwTdXFBrUCFAP+IX4F+wnqR
AmzoCSqPU/o6TvX5C0R9/wWOuh23yARBsQz4nhVoO8zMlsslRHEglkrdcHIl
KKDe6O0ZTdrAaIASoai92UB9mF4B7CMBZ09yc1rFkSAWQKypNzdkpdpQ8c0l
dfMZp7S6XNuKFZhuobImLsE0X0oMBhRTanIoNeDCJjMDqwBCTgoQg5xMgOuA
MYH4UjC/cgagXaAEEKsTlE8BbHTDXlcQl4KyzSV6erD/aRgprbpYgWigCRjk
xElgrhYbSDgxMH8cjxsGS5jrWeoHatYmACrRIgSuViFuU+kWco2WwYjEw5FA
KbkaLGWBhcBujJBJApCOCuPyFeyTm41p5y1AmhCnmyXHHQLWG6gfrIB9tiEx
gguvNqTXmjIF2IEtkzkojxug0w7SCx3wtWjgMuM/tuMx0BaI7NBcw+vKJDfW
Nt2lSoxd20ItMEEB6zWGgNisLCk4qjGvRHatc8PxohulFa/MRA3fk6e/UlQb
gJF9Ksg/lyBORe4RyDEAZhLDAdOCgNaRuVpseuG6WMKANSg94ck5EUzb651F
PZHHTfUvylsywQVxUUAp5/wBnmracxdElFPHNIxHVfR5LwBTsQLtMMtBqq6B
4s8MLKtdL8YmteIu9JAbU1hPHzy1hBIg7BsBrF7da6OLxERkfujmQhK+iKHJ
l8PuwOeCMZDIsRnAlplG7YK+gJ+UYFgrxFpee1gLECcGCsqpiRKz1IyxfGKW
sD6ruU65sOu8rRMm8YI1QoxLnTqDiCaxVXgwhwulYkJVywW8dHZ56GbJCuZW
dWcDo1B8E1VInQZDthjrsjIvlERYQEy666YLq4DuHRsCHNHOFiNSdg+LIZii
0GB5vXZVrjKiWzJbixnEH1lt6qbMoQeE8SGtF0ZIwrog34qxmaypdlRnTs63
ICbhYTSmNjgaUxaIB47465zXDP/EJCbIpRGxET85I3xG2AwTQYMoU8Dz0CFB
cjxubDQaHdFrMFVHGkC+yKg8DQu6AlOqqzBpj3UErFwiBXP4STlTkg6Ak8lB
80LKoo4j6GJh4jigsWzQ5xhMqrlgQsSZIriodEJgDgMYigsDQeeWfsg5JUgp
M2xOTgCnaW5TNIjgZHAcw8V7zzdAMMsyB8mqDTcS3BVjhQDaI6a5nNGPGlPD
eqoRQGEWYFws+/j7u0S1MNOEJNn/8fjjRwYN35EFVzZWqQ+iQKxOQbZR403e
gN2n1yghMfJ+pd2VublEJAyKtc2KsPgkA8SBQr1eiKNoGpjidLYrgV3YpLRe
tkXFpWnRwoAdViB6RGp6VzZYfwUN/QpeXI1LqLFzD9hohioxBpjM13VjFUcb
X6LuS/pUgkaBZCSQtvfsTWURI2NcSeHMg4nIKPWqnEwE5owWCkXe2jp1u5qb
1LUIIi9MYlJYVcvRW14v4Nepz7+AjZLRaCS/RMosehyiNA4hkdniGjgNJvaC
ip6z/zA5dsNhZgGBOBBwVpA6Y/jGCpdPjfxEyIw0JIn2ELHhljUAxGpwoUwx
C6ss/BZ5NjCBPN5mL0SPawt/+avtJU3BkEGFAo/DsVhVVHwOWwdCDFxFI2vm
fPaaPfDWcZOyY0XSHHaPNbG8gG6bNLESye2NO5W3pdNcUwuj0LOyjjgv4wEk
+JeaCEBapwZ5t8TRgHYBibNEqryOWurQhWeu5ZDWv23trHMw0lroaoJuiUjN
dlE7nXKNY2TCfGq9OQQvoo0GPM4kKgciAf+Cu8JEzAXyy3q6ykVEkQp7O6uL
aFOLaQiefbZoJDH+W36vIwrO5d3l6eCJ8wuPKNFxG8rEdI7bdVEGiNu3DWBK
jfarADa05KK4Ke58BQyuteZSFS3tPfPB07bxwVBGP7GGukC7D7SS9RH9A/QA
WIT+6ce5oqbefXt6cnqKq+c0mbuT4mgNvus1IcC5BFZ09+j1+T2B+1iS2DCo
BzvlJUSb1ufA5hjsR3yA8wObgLVtte/cEcdOtd541eLAbFPjQoZNen5qfiVG
IAdq81pnoJqAzqWK1kC6pBsN2w/iwwe/fejzbtrG04NGNFmdRndfQK+O8OuF
GoSZhNTnRsIN9zljz7s/PBhuE4O2nDUi68PUUYxJshbj8Gyfbddhma7k2hI1
jbWBlK9aHRaqJyW4IYNCfQ6jcXlk5soVT27LZQCsoE6QywN0zOW4RqQB56Dt
9LZVtNjkWozXFOym6xAkodHV4MbBcJTWqe2NUrIYg1tL8qxGxMEzLAoF4QRn
feayBr0XCTid4SbYfIEzdsuImtSYLXa9Zm2vapRA8tJfM1MdxzSwDntDccZT
agE4Z2wyBZIyWdeCIcMUnhUjVgLUYAo0rZOgeJdpjnL9UDBaqMyfxVChQeiF
9dzXcoSgEpeB+QF8u9wwJjLZn1yrHJNFEHJnjgy3z67fzAPScDmKS0wOpAmC
Ixrvdow87IU9w28HG/9FX30byv1DvARhUhtu6PBVMIB/VOVubS8qJ05OxdGR
ODoV1Vfsh/BjVA6w+fRERP9xub1HL0/q5U6waEu5o7jcp+ZLBZu662EarGPJ
MIGxJG+QNNazTi9vBeG+UBjuO2YSaWml80RIvCNDo4oH0tC4W/oh5lMbZ8Wv
Awe4Xd2Dh4cvTO5xlmixb6GVgu+Tocp21A5cix1I8D3aOv9BVhky5uO1z19G
q8Oz43q/ViIwrgMaV2Y+xSfqyAMBqlnUtzZxKfCwFcdZjm0yznin4ZDq1/YR
VYZ6OeXGMTvELp7HCw4lYy3YE1HgKse0BZ5NtkFjDHEtWuFtslVlYJSfufi3
esuTPDd4/CKbpBTYtwTMPtqknBN5JHAhnhL6dGckuRYJI3fHkBSdjN97zLW9
og0klzBg2uGZxkOCbKTYUiN5VImkzNHUKVru9ZV8rrppJKt9qjEP+VFsvc+b
QK4RRVOfu6kHV8y1UjUtfKLXcRCT2w0/gkXHuZETMStxa8lpvSyiSq44q2C7
o6zrHaWuxgoWdyPt4COarUocIqPGNgCGRZnfSXJj67eRofouRUhklVmFAHf1
UA37QJcd8w4Bbsvk/MgnejpVtFGxdez3hq3q52Ld/zsRYSCCaUssteE3fNSM
M3Pol4BDZwszLurzMVjTQ+FQISa3hS5A49yGts64naqTYPduf31RFwuEQqen
z8XdrbbmxEWhsS3Mska008LMKKSijN2Ft7bj2k5/M4GHhxi/PIF3wpkD2/yJ
7LNqjTw4sVqZBI/eDNScdJwB993WhOXg5patwWoHvKSja4UxFDJkJhuomzmA
B52qos0t9IRL8KYgWgiBSz7IAD+yj3UBTtsJkm2pSY+OODm/5TnmPeCycMcS
MXGk0unAllMAGU0xKfSLbqRty5W3d6L6sZCqkHMqEwwONFMev/HFeadagCGm
ZZZwS6AOPhkSVUezd3pbZlcZ7unDr4VxO4Ik33lZiy4/nVnq9Z6rHEQ72XZG
ClpdooIVbmdWZ0laAppEWzm1gdecUe1wQ7wezzhQqtesJmhpt7U2SR87f/4U
AQUySiNoPLqX929TUq8+LeeXWtWt2rCPPGRTwu8yBLMcfIyaOGfnc7XOCzoE
VTeJUghkGOBCFxBdluDRWhNbzmmGJoh34sZY/ciQ85AQ9ER7ud9gG5iZRuNV
qXVMyFTuW0NoBPqLKfKpIqOznOML/ugZzjSWKv1MowDhlj4FCJErXgJQk2of
n1Ujcvq82JjKZPOK7Aik56JPP09d2/jzKUdl3daRKpI5oSwfrIr2TCKFDdiV
SFoTmJShrdMWj1HLIjqsCwly14NrAEMSlyNxW58WOLxYyTWdwuFOMZdb5ogq
fbft6U4/RONbgkXKZM20PjoJBp6TUtCYSKNZcS+p4WW9a+81dqSrk3cYNIRR
+mlQ8nmMbtZRdpdo1hluneKJLOnbqBUTO+gUBnLoMtI7MDjc9gsrYVxfVf2o
2jhUo81vzJdQbYBX9sbR6cUxmjdRQTab+h6iuKuGM+A5Z2/8CZV72Hezm//d
/nfb4cJq//uilh6iH5sOM8ZwbJkbuA103S6qh9pthwEpzpXN3SGvrO5ASNV5
3/NF9GIIFFva5RTUJmzqDbzKFTHGxKsFqQ6NmSMF79nCVg6vrBtJo1cPuWoB
/oLVOw894J+NVtwwe73a1ogfIbfi4CU6dHaDp/O/vVmkjlbtHzxC2A87u4nf
v2bvPAmRZVvOGpVtITO9xCPhrGBhkJUNxTrOMRKvg9vhQ2zCM9lFxeXts61r
kys8Hs9n8W5pIERQQZhhYCsaCKcZvbPChKXfTk90DiV58LTQU4Yrv6nPk76q
GWo/8vp47geapkwzeE+d+piGXbQ7Cxj/IOl4k1X5NfayrsIB9kS10we1kKfa
/fbz9T8FqUfjd3xLQWBiJ8Dcl+Qn+JD/BvCHY1+R8SJvrvbzHJy0rpIbTcse
RxxMUxbiS8gsHXTw6FAnmKkxy75Tsya79YE4paxpoBSg4NhBNaDbHBnNAg/Y
WT5jvzD5+hmriOvO8jaRc+KpBmJIKtGvjYNiNNq2nawzucDDl9D/TGXYcXCT
YWN4HOUAHKST8oJy370XSOK9Z8AStjIpWitPVShKJhmAhmg2EdQvXWlG6/k/
x0GEnEm0X1ibH30k6N0zNnUxx4OjozyX66MSo2Z3hKDJTkCfKUh7QnmvAC3x
saAwDLCCuZ7NB3QyhKdV6AU0HcNHqiTZnw+heecctQ0WIvs70x5URNw6yjKV
ev32Yv3wwV1C+vjx3pbwmI5eUraOLB0mPWNw440r5CD9cNYQlBmMKoD1wtDt
qvjI31ZZ8b4xdhYzM9+v45AQ2iO/InND86PGnGKG/SwuRBIdq2JFOYegG0Q7
bwqnlJSVsHgoidK2qOQlHQQhlgrrPdoEeUqNcTjXMDY3unCCQ2dgb8NAIzjL
JK3zxPSrR46GblOiANYQD0cG86+pM+jNdZlmtP1FmkM5HZ2995G8B7KLWmbN
R6ymqdtuCV2tz5w4sLIl5WgQYBQSP1umrP4SnUQ+uNa8IAtUw7x5gGEzp+BU
hjNEgITLOZ3YxrY4IwEDUFtHRAGRC6e98HHGlLkP1uLO8YTjodh4ixEQEtSt
QF4bzXeFypB1CUQ7wI9vn6kTo13av9VReNKzIfvgn3mZyEO3e4+NDcQ83Oeg
dffGWB1g2Jp4e/YppxYfffAscVRZ7y2nDVyQE1KUz2ogQZP0RT/TzWLM4Koi
H6+nbWMDoLsXYf/mlTugzN7+FNHgeFiLAG4/IR7GhMUC/4cRlVnmzz7XHR3l
2mQhnTFIF0WoSSOfx2ARt5o37kS1CsOfCODlQVE0kwu1gLtGYx15+3UAUzdl
KY6/P/NRHg/gyWM8a6iSueGbT2TCjBdEPYkYMLcDTuGnXWUKbIyfFSGvj5/2
d1Ya2bSrFqcN3E0Gl+WwCYBDrk1DtbZJ8jMOZjF528Fl3WnlpS6jzWc1Dp4+
xrMamPs2C0zFk2BDsvn2c3D9ShSehjPFqfGgNilWAcwWgbcehtVtMnZJHIqo
b0cJnmwI0tqYBp5sanKgEDOGxaEUFfpH3tELB3hwZ5EyrcymooxZRHCrNKpO
SzoPgCIMVUit6HIvCxRdI+7C0JVbMuCKgEh/+h7xCvOHFENH4YnPaYau/l+y
mXQXc/RqtLFfUD9P2bgAiIkmtBs63YXuc8LXB/C4/UK+xyiAH+Ch8VEbfBQy
rbW3eRHV8WiMBFZOpxcm45uO7rZXmradjK7sy93FckH8GFY4Gkd/oyLWiS4J
hfRD45YVOF9PKRGf8ArQliPluBU9qW5AQTzDm4/14rX9IH6QCNFzhicyCBud
fN92Vh/PzwzFqaZgjCf34QM+lADMpHbKCO3btt389XdSpxLYVrw49bsD7mgX
HjlmF0zfFnJmn3HKkY//b3YQdkf4tmo4HIoXxl2K5/XRxeuXJ5cn+Ateg3z9
ijHQ0r595rcMuJ67BeXBTLHixk+dcVpKTIe38SjtQPLmg+tPDp7gmo7opFas
0nQ4cgkupgjhQXVk2FbKwRdCwLBYbzLMk+BVLF4dt5GzKYtIunhThHYyd/zs
n+N4p8AKKfGw7TJ2kB9fuZ98xkiqe5NfPJK4ic2R0Epo61O2bAJgCzQGGtmW
LjYEhfU2Fgd3MkDnNsTqDjswUkSbK5FOYIk7zW5Ax3D+9OSGXu+QfgaGU46L
2tdxhbeeA1e3/qjMq91Rr/d680og/eiO3+B5yipZ/GC4hzP/+a81JfsbzCWc
1ag7QWqKN8phkO2OkspcRL08bO0DXWfzmGFLQ2dfdCeU+qo9WYEUyGWSbr2q
2g+7CstyDLA5R8ZRA7FggLZ5vzPs1+NtCDoo5B5Ngf8OSSgytYbOkNDRIVXt
Rrcswpv2AZBc4iFDjBtfZ2T3xelYHT+9gFfGXcMKl7Vzu3ESpmUso9YLbtTi
uZwBrcnKxVjld+09Olt4KLJdiR9Oaw6n+nn4Htwguir88xyfGFEYO+fiZBHH
wI6q4pcn/3kJAoHBwgL8Cz9JKVzeJUoP2pBwzOXTos1xovhHRIC+sRjcUV2v
pC0rQIpQv6F/VvMj1Cr7CrTK4EDpKHhVArGR73nVfTUdrUtthZD0e3QLSMZA
wltbw+rhLPU0g7tBRPnpDS9fO5KIl8fiHT4MYCz79mqYtsXLu3t4DXtB3XAP
cvkCGUPtY/KuIuQ/uaGzk4vvxc//BiY7+w6fLoZPZfn5Lz1C2Rfu4juJx7bg
bP2gVJNoMTECRfFmS3tb1WV6f4cJUwAALI5hMrpkTSoBc/LupB9OK/A2cDNA
R4sk/4/EP2/ubtE1N5hcu6druomoVIu3iOt13qLzFn98b6G+Em/hseJ2f1Fb
B9oNcPHks/DMhaZWuyiN1rHOMH10RTsKlUPZjeKqqrPh1++t/tnu6s6WMOrz
IL0LAL4mSP+E/KPDEP7eQO3qBGrxVw33X0tw0MH9nwfu/zJsgfubwZdy+HrN
L4L8DvR/V6Df8fg/Ao/vgPzPDuStvP1m8KXMvV6zA/IOyL8GIP/9M/QOyDsg
70V7rtuJ+JY9145/d7D9tcH2759/d4mVDsZvg/FqQfaG9z/79AzV6cC8A/Ov
Acw7Dt6B9x8XvPe+ALz3OvDuwLsD7w68/9Tg/dtj9/4XYPd+h90ddnfY3WF3
h92/KXYfwA+fj94HHXp36N2hd4feHXr/puj94Auw+0GH3R12d9jdYXeH3b8p
dj/8Aux+2GF3h90ddnfY3WH3Px+7P+8RLd1ZwQ6vO7zu8LrD698Ir1N9rT4L
suMKfzLUxoY6kOtArgO5PxjI3XajfAvMdVfJO3r69SH37/8qS4fcHXLXkPuz
H/va3R3vkPvrQ+6Oc3fI/QdA7sFgIMYyuUIMF6ME33KQqsmMFs66d8qtTH4l
xqVOJzCNJXSs6R0rhUoUvnEiescFv3pB0Uvsj94bfADsC6PmOb5HyL3bm4tY
9yK7VF+5t8vJ7AomKBfirZHJvC9GWYbBeyZ+wAecg0b18UG1KhM/6nxqB0cg
7iv8St3gi0tVmukrc92HFcaX0FxkKk37YHcw8FemwGe0z+UCvijxTVbihzIB
A5KrNYPhBb6maS5+yAGMMnyzBb/WR+f00nF6pD29+VGpCYpKuHdy8MstQT5u
6enlDsfuMfoEj29PjwVe8O31/hUXDxE0LJ5/awwoRazn/t2e7uX2YERo9iaL
Xoc6hNbe+fcoQJkt76AmLeVOqrePSmtNoqkqPaV3S9cbr/2yzU63v/4bLcO9
YsG4J9bzewXpjRtBok6NAA76/PTgAhtz7xyo3gEi8dn0/E5lGAFL14lm4xnF
9RdObKAMv+TS4RSDKj7I/hPt0ju78U0YhLm2CUf8Qq3wJoxKSN4HRt50RS+M
rV49BXMLrwTwTUziNqK60IvHCH6FY5HwOy38W+oQ89AbgxzIsbO3HPb+B5A8
VgI8qAAA

-->

</rfc>

