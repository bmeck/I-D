<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.5.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2397 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2397.xml">
<!ENTITY RFC2978 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2978.xml">
<!ENTITY RFC3552 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC3629 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3629.xml">
<!ENTITY RFC4329 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4329.xml">
<!ENTITY RFC6365 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6365.xml">
<!ENTITY RFC6838 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6838.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC3236 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3236.xml">
<!ENTITY RFC3875 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3875.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC3987 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3987.xml">
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dispatch-javascript-mjs-09" category="info" obsoletes="4329">

  <front>
    <title>ECMAScript Media Types Updates</title>

    <author initials="M." surname="Miller" fullname="Matthew A. Miller">
      <organization></organization>
      <address>
        <email>linuxwolf+ietf@outer-planes.net</email>
      </address>
    </author>
    <author initials="M." surname="Borins" fullname="Myles Borins">
      <organization>GitHub</organization>
      <address>
        <email>mylesborins@github.com</email>
      </address>
    </author>
    <author initials="M." surname="Bynens" fullname="Mathias Bynens">
      <organization>Google</organization>
      <address>
        <email>mths@google.com</email>
      </address>
    </author>
    <author initials="B." surname="Farias" fullname="Bradley Farias">
      <organization></organization>
      <address>
        <email>bradley.meck@gmail.com</email>
      </address>
    </author>

    <date year="2021" month="October" day="11"/>

    <area>ART</area>
    <workgroup>DISPATCH</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document describes the registration of media types for the ECMAScript and JavaScript programming languages and conformance requirements for implementations of these types. This document obsoletes RFC4329, "Scripting Media Types", replacing the previous registrations for "text/javascript" and "application/javascript" with information and requirements aligned with implementation experiences.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>This memo describes media types for the JavaScript and ECMAScript programming languages.  Refer to the sections "Introduction" and "Overview" in <xref target="ECMA-262"/> for background information on these languages.  This document updates the descriptions and registrations for these media types to reflect existing usage on the Internet, and provides up-to-date security considerations.</t>

<t>This document replaces the media types registrations in <xref target="RFC4329"/>, and updates the requirements for implementations using those media types defined in <xref target="RFC4329"/> based on current existing practices. As a consequence, this document obsoletes <xref target="RFC4329"/>.</t>

<section anchor="terminology"><name>Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14  <xref target="RFC2119"/>  <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="compatibility"><name>Compatibility</name>

<t>This document defines equivalent processing requirements for the types text/javascript, text/ecmascript, and application/javascript.  The most widely supported media type in use is text/javascript; all others are considered historical and obsolete compared to text/javascript.</t>

<t>The types defined in this document are applicable to scripts written in <xref target="ECMA-262"/>.  Later editions of <xref target="ECMA-262"/> are not directly addressed, although it is expected that implementations will behave as if applicability were extended to them.  This document does not address other extensions to <xref target="ECMA-262"/> or scripts written in other languages.</t>

<t>This document may be updated to take other content into account.  Updates of this document may introduce new optional parameters; implementations MUST consider the impact of such an update.</t>

<t>The definitions in this document reflect the current state of implementation across the JavaScript ecosystem, in web browsers and other environments such as Node.js alike, in order to guarantee backwards compatibility with existing applications as much as possible.</t>

</section>
<section anchor="modules"><name>Modules</name>

<t>In order to formalize support for modular programs, <xref target="ECMA-262"/> (starting with 6th Edition) defines two top-level goal symbols (or roots to the abstract syntax tree) for the ECMAScript grammar: Module and Script.  The Script goal represents the original structure where the code executes in the global scope, while the Module goal represents the module system built into ECMAScript starting with 6th Edition.  See the section "ECMAScript Language: Scripts and Modules" of <xref target="ECMA-262"/> for details.</t>

<t>This separation means that (in the absence of additional information) there are two possible interpretations for any given ECMAScript source text. The TC39 standards body for ECMAScript has determined that media types are outside of their scope of work <xref target="TC39-MIME-ISSUE"/>.</t>

<t>It is not possible to fully determine if a source text of ECMAScript is meant to be parsed using the Module or Script grammar goals based upon content alone. Therefore, scripting environments use out of band information in order to determine what goal should be used. Some scripting environments have chosen to adopt the file extension of .mjs for this purpose.</t>

<t>This document does not define how fragment identifiers in resource identifiers (<xref target="RFC3986"/>, <xref target="RFC3987"/>) for documents labeled with one of the media types defined in this document are resolved.  An update of this document may define processing of fragment identifiers.</t>

</section>
<section anchor="encoding"><name>Encoding</name>

<t>Refer to <xref target="RFC6365"/> for a discussion of terminology used in this section.  Source text (as defined in <xref target="ECMA-262"/>, section "Source Text") can be binary source text.  Binary source text is a textual data object that represents source text encoded using a character encoding scheme.  A textual data object is a whole text protocol message or a whole text document, or a part of it, that is treated separately for purposes of external storage and retrieval.  An implementation's internal representation of source text is not considered binary source text.</t>

<t>Implementations need to determine a character encoding scheme in order to decode binary source text to source text.  The media types defined in this document allow an optional charset parameter to explicitly specify the character encoding scheme used to encode the source text.</t>

<t>How implementations determine the character encoding scheme can be subject to processing rules that are out of the scope of this document.  For example, transport protocols can require that a specific character encoding scheme is to be assumed if the optional charset parameter is not specified, or they can require that the charset parameter is used in certain cases.  Such requirements are not considered part of this document.</t>

<t>Implementations that support binary source text MUST support binary source text encoded using the UTF-8 <xref target="RFC3629"/> character encoding scheme.  Module goal sources MUST be encoded as UTF-8, all other encodings will fail.  Source goal sources SHOULD be encoded as UTF-8; other character encoding schemes MAY be supported, but are discouraged.  Whether U+FEFF is processed as a Byte Order Mark (BOM) signature or not depends on the host environment, and is not considered part of this document.</t>

<section anchor="charset-parameter"><name>Charset Parameter</name>

<t>The charset parameter provides a means to specify the character encoding scheme of binary source text.  Its value SHOULD be a registered charset <xref target="CHARSETS"/>, and is considered valid if it matches the mime-charset production defined in <xref target="RFC2978"/>, section 2.3.</t>

<t>The charset parameter is only used when processing a Script goal source; Module goal sources MUST always be processed as UTF-8.</t>

</section>
<section anchor="character-encoding-scheme-detection"><name>Character Encoding Scheme Detection</name>

<t>It is possible that implementations cannot interoperably determine a single character encoding scheme simply by complying with all requirements of the applicable specifications.  To foster interoperability in such cases, the following algorithm is defined.  Implementations apply this algorithm until a single character encoding scheme is determined.</t>

<t><list style="numbers">
  <t>If the binary source text is not already determined to be using a Module goal and starts with a Unicode encoding form signature, the signature determines the encoding.  The following octet sequences, at the very beginning of the binary source text, are considered with their corresponding character encoding schemes:  <vspace blankLines='1'/>
    <figure><artwork><![CDATA[
 +------------------+----------+
 | Leading sequence | Encoding |
 |------------------+----------|
 | EF BB BF         | UTF-8    |
 | FF FE            | UTF-16LE |
 | FE FF            | UTF-16BE |
 +------------------+----------+
]]></artwork></figure>
  <vspace blankLines='1'/>
Implementations of this step MUST use these octet sequences to determine the character encoding scheme, even if the determined scheme is not supported.  If this step determines the character encoding scheme, the octet sequence representing the Unicode encoding form signature MUST be ignored when decoding the binary source text.</t>
  <t>If a charset parameter is specified and its value is valid and supported by the implementation, the value determines the character encoding scheme.</t>
  <t>If no other character encoding scheme is determined from the previous steps, it is assumed to be UTF-8.</t>
</list></t>

<t>If the character encoding scheme is determined to be UTF-8 through any means other than step 1 as defined above and the binary source text starts with the octet sequence EF BB BF, the octet sequence is ignored when decoding the binary source text.</t>

</section>
<section anchor="character-encoding-scheme-error-handling"><name>Character Encoding Scheme Error Handling</name>

<t>Binary source text that is not properly encoded for the determined character encoding can pose a security risk, as discussed in section 5.  That said, because of the varied and complex environments scripts are executed in, most of the error handling specifics are left to the processors.  The following are broad guidelines that processors follow.</t>

<t>If binary source text is determined to have been encoded using a certain character encoding scheme that the implementation is unable to process, implementations can consider the resource unsupported (i.e., do not decode the binary source text using a different character encoding scheme).</t>

<t>Binary source text can be determined to have been encoded using a certain character encoding scheme but contain octet sequences that are not valid according to that scheme.  Implementations can substitute those invalid sequences with the replacement character U+FFFD (properly encoded for the scheme), or stop processing altogether.</t>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>Refer to <xref target="RFC3552"/> for a discussion of terminology used in this section.  Examples in this section and discussions of interactions of host environments with scripts, modules, and extensions to <xref target="ECMA-262"/> are to be understood as non-exhaustive and of a purely illustrative nature.</t>

<t>The programming language defined in <xref target="ECMA-262"/> is not intended to be computationally self-sufficient, rather it is expected that the computational environment provides facilities to programs to enable specific functionality.  Such facilities constitute unknown factors and are thus considered out of the scope of this document.</t>

<t>Derived programming languages are permitted to include additional functionality that is not described in <xref target="ECMA-262"/>; such functionality constitutes an unknown factor and is thus considered out of the scope of this document.  In particular, extensions to <xref target="ECMA-262"/> defined for the JavaScript programming language are not discussed in this document.</t>

<t>Uncontrolled execution of scripts can be exceedingly dangerous. Implementations that execute scripts MUST give consideration to their application's threat models and those of the individual features they implement; in particular, they MUST ensure that untrusted content is not executed in an unprotected environment.</t>

<t>Module scripts in ECMAScript can request the fetching and processing of additional scripts, called importing.  Implementations that support modules need to process imported sources in the same way as scripts.  Further, there may be additional privacy and security concerns depending on the location(s) the original script and its imported modules are obtained from.  For instance, a script obtained from "host-a.example" could request to import a script from "host-b.example", which could expose information about the executing environment (e.g., IP address) to "host-b.example".  See the section "ECMAScript Language: Scripts and Modules" in <xref target="ECMA-262"/> for details.</t>

<t>Specifications for host environment facilities and for derived programming languages should include security considerations.  If an implementation supports such facilities, the respective security considerations apply.  In particular, if scripts can be referenced from or included in specific document formats, the considerations for the embedding or referencing document format apply.</t>

<t>For example, scripts embedded in application/xhtml+xml <xref target="RFC3236"/> documents could be enabled through the host environment to manipulate the document instance, which could cause the retrieval of remote resources; security considerations regarding retrieval of remote resources of the embedding document would apply in this case.</t>

<t>This circumstance can further be used to make information, that is normally only available to the script, available to a web server by encoding the information in the resource identifier of the resource, which can further enable eavesdropping attacks.  Implementation of such facilities is subject to the security considerations of the host environment, as discussed above.</t>

<t>The programming language defined in <xref target="ECMA-262"/> does include facilities to loop, cause computationally complex operations, or consume large amounts of memory; this includes, but is not limited to, facilities that allow dynamically generated source text to be executed (e.g., the eval() function); uncontrolled execution of such features can cause denial of service, which implementations MUST protect against.</t>

<t>With the addition of SharedArrayBuffer objects in ECMAScript version 8, it could be possible to implement a high-resolution timer which could lead to certain types of timin`g and side-channel attacks (e.g., <xref target="SPECTRE"/>).  Implementations can take steps to mitigate this concern, such as disabling or removing support for SharedArrayBuffer objects, or take additional steps to ensure access to this shared memory is only accessible between execution contexts that have some form of mutual trust.</t>

<t>A host environment can provide facilities to access external input. Scripts that pass such input to the eval() function or similar language features can be vulnerable to code injection attacks. Scripts are expected to protect against such attacks.</t>

<t>A host environment can provide facilities to output computed results in a user-visible manner.  For example, host environments supporting a graphical user interface can provide facilities that enable scripts to present certain messages to the user.  Implementations MUST take steps to avoid confusion of the origin of such messages.  In general, the security considerations for the host environment apply in such a case as discussed above.</t>

<t>Implementations are required to support the UTF-8 character encoding scheme; the security considerations of <xref target="RFC3629"/> apply.  Additional character encoding schemes may be supported; support for such schemes is subject to the security considerations of those schemes.</t>

<t>Source text is expected to be in Unicode Normalization Form C. Scripts and implementations MUST consider security implications of unnormalized source text and data.  For a detailed discussion of such implications refer to the security considerations in <xref target="RFC3629"/>.</t>

<t>Scripts can be executed in an environment that is vulnerable to code injection attacks.  For example, a CGI script <xref target="RFC3875"/> echoing user input could allow the inclusion of untrusted scripts that could be executed in an otherwise trusted environment.  This threat scenario is subject to security considerations that are out of the scope of this document.</t>

<t>The "data" resource identifier scheme <xref target="RFC2397"/>, in combination with the types defined in this document, could be used to cause execution of untrusted scripts through the inclusion of untrusted resource identifiers in otherwise trusted content.  Security considerations of <xref target="RFC2397"/> apply.</t>

<t>Implementations can fail to implement a specific security model or other means to prevent possibly dangerous operations.  Such failure could possibly be exploited to gain unauthorized access to a system or sensitive information; such failure constitutes an unknown factor and is thus considered out of the scope of this document.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>The media type registrations herein are divided into two major categories: the sole media type "text/javascript" which is now in common usage, and all of the media types that are obsolete.</t>

<t>For both categories, the media types are updated to reference <xref target="ECMA-262"/>. In addition, a new file extension of .mjs is added to the list of file extensions with the restriction that contents should be parsed using the Module goal. Finally, the <xref target="HTML"/> specification uses "text/javascript" as the default media type of ECMAScript when preparing script tags; therefore, "text/javascript" intended usage is to be moved from OBSOLETE to COMMON.</t>

<t>These changes are to be reflected in the IANA Media Types registry in accordance with <xref target="RFC6838"/>. All registrations will point to this document as reference. The outdated note stating that the "text/javascript" media type has been "OBSOLETED in favor of application/javascript" is to be removed. The outdated note stating that the "text/ecmascript" media type has been "OBSOLETED in favor of application/ecmascript" is to be removed. IANA is requested to add the note "OBSOLETED in favor of text/javascript" to all registrations except "text/javascript".</t>

<section anchor="common-javascript-media-types"><name>Common JavaScript Media Types</name>

<section anchor="textjavascript"><name>text/javascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document] and <xref target="RFC4329"/>.</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>COMMON</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
</section>
<section anchor="historic-javascript-media-types"><name>Historic Javascript Media Types</name>

<t>The following media types are added or updated for historical purposes.  All herein have an intended usage of OBSOLETE, and are not expected to be in use with modern implementations.</t>

<section anchor="applicationecmascript"><name>application/ecmascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>application</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>ecmascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.es, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document] and <xref target="RFC4329"/>.</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="applicationjavascript"><name>application/javascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>application</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also section 4.1 of [this document] regarding the charset parameter.</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document] and <xref target="RFC4329"/>.</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;.</t>
  </dd>
</dl>

</section>
<section anchor="applicationx-ecmascript"><name>application/x-ecmascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>application</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>x-ecmascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.es, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="applicationx-javascript"><name>application/x-javascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>application</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>x-javascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textecmascript"><name>text/ecmascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>ecmascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.es, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document] and <xref target="RFC4329"/>.</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjavascript10"><name>text/javascript1.0</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript1.0</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjavascript11"><name>text/javascript1.1</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript1.1</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjavascript12"><name>text/javascript1.2</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript1.2</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjavascript13"><name>text/javascript1.3</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript1.3</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjavascript14"><name>text/javascript1.4</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript1.4</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjavascript15"><name>text/javascript1.5</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>javascript1.5</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textjscript"><name>text/jscript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>jscript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textlivescript"><name>text/livescript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>livescript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>See various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textx-ecmascript"><name>text/x-ecmascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>x-ecmascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.es, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
<section anchor="textx-javascript"><name>text/x-javascript</name>

<dl>
  <dt>
Type name:  </dt>
  <dd>
    <t>text</t>
  </dd>
  <dt>
Subtype name:  </dt>
  <dd>
    <t>x-javascript</t>
  </dd>
  <dt>
Required parameters:  </dt>
  <dd>
    <t>N/A</t>
  </dd>
  <dt>
Optional parameters:  </dt>
  <dd>
    <t>: charset, see section 4.1 of [this document].</t>
  </dd>
  <dt>
Encoding considerations:  </dt>
  <dd>
    <t>Binary</t>
  </dd>
  <dt>
Security considerations:  </dt>
  <dd>
    <t>See section 5 of [this document]..</t>
  </dd>
  <dt>
Interoperability considerations:  </dt>
  <dd>
    <t>It is expected that implementations will behave as if this registration applies to later editions of <xref target="ECMA-262"/>, and its published specification references may be updated accordingly from time to time. See also various sections of [this document].</t>
  </dd>
  <dt>
Published specification:  </dt>
  <dd>
    <t><xref target="ECMA-262"/></t>
  </dd>
  <dt>
Applications which use this media type:  </dt>
  <dd>
    <t>Script interpreters as discussed in [this document].</t>
  </dd>
  <dt>
Additional information:  </dt>
  <dd>
    <dl>
      <dt>
Magic number(s):      </dt>
      <dd>
        <t>n/a</t>
      </dd>
      <dt>
File extension(s):      </dt>
      <dd>
        <t>.js, .mjs</t>
      </dd>
      <dt>
Macintosh File Type Code(s):      </dt>
      <dd>
        <t>TEXT</t>
      </dd>
    </dl>
  </dd>
  <dt>
Person &amp; email address to contact for further information:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Intended usage:  </dt>
  <dd>
    <t>OBSOLETE</t>
  </dd>
  <dt>
Restrictions on usage:  </dt>
  <dd>
    <t>This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <xref target="ECMA-262"/>.</t>
  </dd>
  <dt>
Author:  </dt>
  <dd>
    <t>See Author's Address section of [this document].</t>
  </dd>
  <dt>
Change controller:  </dt>
  <dd>
    <t>IESG &lt;iesg@ietf.org&gt;</t>
  </dd>
</dl>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2397;
&RFC2978;
&RFC3552;
&RFC3629;
&RFC4329;
&RFC6365;
&RFC6838;
&RFC8174;
<reference anchor="CHARSETS" target="https://www.iana.org/assignments/character-sets">
  <front>
    <title>Assigned character sets</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ECMA-262" target="https://262.ecma-international.org/12.0/">
  <front>
    <title>ECMAScript® 2021 language specification, ECMA-262 12th Edition, June 2021</title>
    <author >
      <organization>Ecma International</organization>
    </author>
    <date year="2021" month="June"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC3236;
&RFC3875;
&RFC3986;
&RFC3987;
<reference anchor="HTML" target="https://html.spec.whatwg.org/multipage/scripting.html#prepare-a-script">
  <front>
    <title>HTML Living Standard</title>
    <author >
      <organization>WHATWG</organization>
    </author>
    <date year="2017" month="August"/>
  </front>
</reference>
<reference anchor="SPECTRE" target="https://arxiv.org/abs/1801.01203">
  <front>
    <title>Spectre Attacks: Exploiting Speculative Execution</title>
    <author initials="P." surname="Kocher" fullname="Paul Kocher">
      <organization></organization>
    </author>
    <author initials="A." surname="Fogh" fullname="Anders Fogh">
      <organization></organization>
    </author>
    <author initials="D." surname="Gerkin" fullname="Daniel Gerkin">
      <organization></organization>
    </author>
    <author initials="D." surname="Gruss" fullname="Daniel Gruss">
      <organization></organization>
    </author>
    <author initials="W." surname="Haas" fullname="Werner Haas">
      <organization></organization>
    </author>
    <author initials="M." surname="Hamburg" fullname="Mike Hamburg">
      <organization></organization>
    </author>
    <author initials="M." surname="Lipp" fullname="Moritz Lipp">
      <organization></organization>
    </author>
    <author initials="S." surname="Mangard" fullname="Stefan Mangard">
      <organization></organization>
    </author>
    <author initials="T." surname="Prescher" fullname="Thomas Prescher">
      <organization></organization>
    </author>
    <author initials="M." surname="Schwarz" fullname="Michael Schwarz">
      <organization></organization>
    </author>
    <author initials="Y." surname="Yarom" fullname="Yuval Yarom">
      <organization></organization>
    </author>
    <date year="2018" month="January"/>
  </front>
</reference>
<reference anchor="TC39-MIME-ISSUE" target="https://web.archive.org/web/20170814193912/https://github.com/tc39/ecma262/issues/322">
  <front>
    <title>Add `application/javascript+module` mime to remove ambiguity</title>
    <author >
      <organization>TC39</organization>
    </author>
    <date year="2017" month="August"/>
  </front>
</reference>


    </references>


<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>This work builds upon its antecedent document, authored by Bjoern Hoehrmann.  The authors would like to thank Adam Roach, Anne van Kesteren, Allen Wirfs-Brock, Alexey Melnikov, James Snell, Mark Nottingham, Murray Kucherawy, and Suresh Krishnan for their guidance and feedback throughout this process.</t>

</section>
<section anchor="changes-from-rfc-4329"><name>Changes from RFC 4329</name>

<t><list style="symbols">
  <t>Added a section discussing ECMAScript modules and the impact on processing.</t>
  <t>Updated the Security Considerations to discuss concerns associated with ECMAScript modules and SharedArrayBuffers.</t>
  <t>Updated the character encoding scheme detection to remove normative guidance on its use, to better reflect operational reality.</t>
  <t>Changed the intended usage of the media type text/javascript from obsolete to common.</t>
  <t>Changed the intended usage for all other script media types to obsolete.</t>
  <t>Updated various references where the original has been obsoleted.</t>
  <t>Updated references to ECMA-262 to match the version at time of publication.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
Y2dvOez9DzHaq8E+qAAA

-->

</rfc>

